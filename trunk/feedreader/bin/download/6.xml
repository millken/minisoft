<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>阮一峰的网络日志</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/" />
    <link rel="self" type="application/atom+xml" href="http://www.ruanyifeng.com/blog/atom.xml" />
   <id>tag:www.ruanyifeng.com,2010:/blog//1</id>
    <link rel="service.post" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1" title="阮一峰的网络日志" />
    <updated>2010-03-22T13:05:15Z</updated>
    <subtitle>Ruan YiFeng&apos;s Blog</subtitle>
    <generator uri="http://www.sixapart.com/movabletype/">Movable Type 3.21</generator>
 
<entry>
    <title>《摩西英语》出书了！</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/book_of_mosesenglish_published.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1358" title="《摩西英语》出书了！" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1358</id>
    
    <published>2010-03-22T05:32:46Z</published>
    <updated>2010-03-22T13:05:15Z</updated>
    
    <summary>上个周末，收到梁兄的来信。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Startup" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>上个周末，收到梁兄的来信。</p>]]>
        <![CDATA[<p>他告诉我一个好消息，《摩西英语》已经结集出版了！</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010032201.jpg" /></p>

<p>听到这个消息，我不禁想起了<a href="http://www.ruanyifeng.com/blog/2008/10/moses_english.html" target="_blank">往事</a>。一年半以前，<a href="http://www.mosesenglish.com/" target="_blank">“摩西英语”</a>网站开张，我大概是它的第一个外部访问者。当时，网站刚刚搭建，梁兄询问我的看法。我看了一眼，觉得完全是业余爱好者的作品，设计得很粗糙，功能也很落后。我就直率地告诉他，我很钦佩你的勇气和理想，但是这个网站想成功，恐怕难度很大。</p>

<p>梁兄三十多岁了，没有多少计算机知识，也没有人脉和资源，只是一个普通职员，而且还辞职了。这样的条件，怎么可能做出一个很先进的网站呢？……互联网给人一种假象，似乎普通人也可以创造神话，但是你最好不要相信这一点。网络与其他所有世俗的领域一样，没有大公司和大资本的支持，你什么也做不到。所以，我那时对“摩西英语”的前途很悲观。</p>

<p>“摩西英语”的后台，采用了asp语言和性能较差的access数据库。结果开张第一天，大量访问者涌入，access数据库一下子锁死了，所有网页都打不开。我心想完了，第一天也撑不过去了。</p>

<p>但是，梁兄克服所有困难，坚持下来了，凭着一种信念：人生短暂，应该去追求自己的梦想。每个工作日，一篇原创的英语单词讲解，风雨无阻，至今已经有400篇了。“摩西英语”也从默默无闻的个人网站，变为国内小有名气的英语学习站点，Google Reader的订阅数达到了3000+，有道词典也与他合作推出了专门版本的<a href="http://cidian.youdao.com/moses/" target="_blank">电子词典</a>。</p>

<p>虽然他没说，但是我知道，这些成绩的背后是别人看不见的艰辛付出。网站开张很快就要满两年了，梁兄的时间每天都要花在网站上。日复一日地撰写文章、更新网页，就像愚公移山一样，每天都要为自己打气，对自己说，这座山是可能被我移走的。那种无力的孤独感，没经历过的人无法想像。更何况所有这一切，都没有办法变成经济收入，也许未来会找到方法，但是现在确实没法解决经济问题。你受到的打击是双重的，一方面是经济压力，另一方面是心理压力。社会不向你提供收入，就是变相告诉你，你不应该做这件事。</p>

<p>现在《摩西英语》终于结集出版了，我想这对于梁兄是一个莫大的安慰。这本书是对他人生价值的肯定，但愿能帮助他走得更远一点。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010032202.jpg" /></p>

<p>虽然我知道很难很难，但是我还是希望梁兄能继续坚持下去。你为我们所有人带来希望，如果你能够走得很远，就说明传说是真的。一个普通的灵魂，靠着自己的努力和勤奋，不断为别人创造价值，就能够在这个社会上生存下去，并且获得成功。最终来说，这并不是关于一个网站或一本书，而是一个关于梦想和奋斗的故事。让我们祈祷，互联网会让这一切成为可能。</p>

<p>朱学恒翻译过<a href="http://blogs.myoops.org/lucifer.php/2009/02/25/alwaysstandontheeggside" target="_blank">村上春树的一篇演讲</a>，我要引用其中的一段：</p>

<blockquote><div>

<p>“<strong>若要在高墙与以卵击石的鸡蛋之间作选择，我永远会选择站在鸡蛋那一边。</strong></p>

<p>是的。不管那高墙多么的正当，那鸡蛋多么的咎由自取，我总是会站在鸡蛋那一边。就让其他人来决定是非，或许时间或是历史会下判断。</p>

<p>我们每个人或多或少都是一颗鸡蛋。我们都是独一无二，装在脆弱容器里的灵魂。对我来说是如此，对诸位来说也是一样。我们每个人也或多或少，必须面对一堵高墙。这高墙的名字叫做体制。体制本该保护我们，但有时它却自作主张，开始残杀我们，甚至让我们冷血，有效地系统化地残杀别人。</p>

<p>我这样做只有一個理由，那就是将个体的灵魂尊严暴露在光明之下，将一道光束照在体系上，避免它将我们的灵魂吞没，剥夺灵魂的意义。”</p>

</div></blockquote>

<p>梁兄的“摩西英语”成功的机会，看上去是如此的微小，就好像鸡蛋击破高墙的机会那样微小，但是我永远选择站在鸡蛋这一边。</p>

<p>300页，52个章节的英语单词讲解，只要18.40元，欢迎到<a href="http://www.mosesenglish.com/books.asp" target="_blank">http://www.mosesenglish.com/books.asp</a>购买！</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>几种计算机语言的评价（修订版）</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/programming_language_evaluations_revised.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1357" title="几种计算机语言的评价（修订版）" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1357</id>
    
    <published>2010-03-20T09:54:41Z</published>
    <updated>2010-03-20T09:58:59Z</updated>
    
    <summary>编程新手都有一个同样的问题：“我应该学习哪一种语言？”。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="IT" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>编程新手都有一个同样的问题：“我应该学习哪一种语言？”。</p>]]>
        <![CDATA[<p>《Unix编程艺术》（Eric Raymond著）第十四章，对各种语言进行了评价，正好可以用来回答这个问题。下面是我的笔记，整理了六种主要计算机语言的优缺点。读完就会知道，对于不同的任务，应该选择哪一种语言了。</p>

<p>原文写于2003年。网上曾经有一个不完整的中译本，我也在这个网志中<a href="http://www.ruanyifeng.com/blog/2006/03/programming_language_evaluations.html" target="_blank">转贴</a>过，所以今天贴的只能算修订版了。</p>

<p>====================</p>

<p><strong>几种计算机语言的评价</strong></p>

<p>作者：Eric Raymond</p>

<p>摘自《Unix编程艺术（第十四章）》</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010032001.jpg" /></p>

<p><strong>一、C</strong></p>

<p>C语言的优点是，运行效率高和接近机器语言。它特别适用于以下几种程序：</p>

<p>　　1. 对运行速度要求很高的程序。</p>

<p>　　2. 与操作系统内核关系密切的程序。</p>

<p>　　3. 必须在多个操作系统上移植的程序。</p>

<p>除此之外，学习C语言有一个最大的理由，那就是它能帮助我们学会，在硬件层次上考虑问题。如果你想以编程作为自己的人生事业，C是一定要学习的。</p>

<p>C的最大缺点是，在编程过程中，你不得不花很多时间，考虑与你要解决的问题完全无关、且非常复杂的硬件资源管理问题。</p>

<p><strong>二、C++</strong></p>

<p>C++在80年代中期推出，支持OO（面向对象编程），原意是作为C语言的取代者。</p>

<p>但是它没能做到做一点，原因有以下几个：</p>

<p>　　1. 它也没有解决“内存管理”问题，虽然比C有所改善。</p>

<p>　　2. 标准化不成功。各个编译器都只支持自己选择的一个子集，导致跨平台性不如C。</p>

<p>　　3. 过分的精细和复杂了。C++的复杂度，超过了C和OO的复杂度之和。</p>

<p>　　4. OO并没有带来多少优势，反而带来了一些副作用，比如厚重的胶合层和庞大的代码体积。</p>

<p>总的来说，C++的优势还是程序效率，以及面向对象编程能力，糟糕之处是它鼓励复杂的设计。</p>

<p><strong>三、Shell</strong></p>

<p>Shell程序写起来很容易，对于简单的任务，开发速度很快。</p>

<p>当程序变大时，它就不太适合了，很难维护，而且将变得非常专用（只能在你自己的机器上使用），因为 Shell必须调用各种外部程序，无法保证每一台机器都同样安装了这些程序。</p>

<p>最常见的Shell是bash，它的一些语法规则很混乱，会产生很难阅读的代码。另外，shell只能在Unix上使用，无法跨平台。</p>

<p>Shell的最佳用途如下：</p>

<p>　　1. 执行简单的系统管理任务。</p>

<p>　　2. 编写系统启动时的初始化脚本。</p>

<p>　　3. 作为其他语言开发的程序的包装器。</p>

<p><strong>四、Perl</strong></p>

<p>Perl发布于1987年，基本上就是一个增强的Shell。</p>

<p>它的最大长处是强劲的文本处理能力，无以伦比的正则表达式支持，而且有全套Unix API的内部支持，显著减少了对C的需求。</p>

<p>Perl的主要缺点是某些部分设计得非常丑陋，且无法补救，某些部分也过于复杂。当程序规模增大时，必须严格遵守约定，才能保证模块化和设计的可控性，难于维护。</p>

<p><strong>五、Python</strong></p>

<p>Python发布于1991年，是一种与C语言紧密集成的脚本语言。</p>

<p>Python的优点是非常干净优雅，鼓励清晰易读的代码，易学易用；提供了面向对象编程的可能，但并不把这个选择强加于设计者；具有出色的模块化特性，同Java一样，适合用来做需要协同开发的大型复杂项目。在很多方面，它都比Java简单。此外，Python标准中包括了对许多网络协议的支持，因此也很适合网络管理任务。</p>

<p>Python的缺点主要是效率低下，速度缓慢。在执行速度上，它不仅无法与C/C++竞争，而且也不如其他主要的脚本语言。但是，这其实并不是一个严重的问题，有时网络或磁盘的延迟，会完全抵消Python本身消耗的时间。而且因为Python特别容易和C结合起来，因此性能关键的 Python模块，可以很方便地转化成C语言来提高速度。</p>

<p>总的来说，对于小型项目和大量依靠正则表达式的项目，Python不如Perl的表达能力强。至于更小的项目，Python则是大材小用，shell也许更适合。</p>

<p><strong>六、Java</strong></p>

<p>Java发布于1995年，设计目标有两个。</p>

<p>一个是“write once, run anywhere”（一次编写，到处运行），即不依赖于特定的平台；另一个是在网页中嵌入交互程序（applet），可以在任何一个浏览器中运行。由于它的所有者Sun公司的一系列失误，第一个目标并没有完全实现，第二个目标则是彻底失败。但是Java依然在系统编程和应用编程方面非常强大，足以挑战C和 C++。</p>

<p>Java的优点是比C++小巧简单，可以自动管理内存，支持类似C的语法和OO编程，与C程序的结合也很好。</p>

<p>Java的缺点是某些部分过于复杂，比如内部类和匿名类的运用会产生很混乱费解的代码；某些部分功能不完善，也无法利用操作系统提供的功能接口，比如在Java中读取和处理文本文件，并不像其他语言那样容易。此外，Java配置环境和版本的混乱，也让人很头疼。</p>

<p>总的来说，除了系统编程和某些对运行速度要求很高的编程之外，Java都是比C++更好的选择。如果和Python相比，Java可能在大型项目上有优势，但是也不是绝对的。 </p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>Unix版权史</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/unix_copyright_history.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1356" title="Unix版权史" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1356</id>
    
    <published>2010-03-18T11:54:31Z</published>
    <updated>2010-03-18T12:40:01Z</updated>
    
    <summary>1. 这几天，我在读《Unix编程艺术》。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="IT" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>这几天，我在读《Unix编程艺术》。</p>]]>
        <![CDATA[<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031801.jpg" /></p>

<p>书中介绍了Unix的发展历史。我发现，这是一个很好的例子，说明现行版权制度具有阻碍社会发展的负面作用。</p>

<p>2.</p>

<p><a href="http://www.ruanyifeng.com/blog/2009/06/unix_turns_40.html" target="_blank">Unix诞生</a>于1969年，是贝尔实验室员工Ken Thompson的个人项目。由于贝尔实验室是AT&T（美国电话电报公司）的下属机构，所以Unix的版权归AT&T所有。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031802.jpg" /></p>

<p>AT&T垄断了美国长途电话业务，所以美国司法部在1958年与它签了一个和解协议。AT&T同意不进入计算机业，不销售任何与计算机有关的产品，以避免司法部起诉它违反《反垄断法》。Unix是计算机的操作系统，所以AT&T不能销售它，任何要求得到源码的机构，都能免费得到。</p>

<p>加州大学伯克利分校得到源码后，为Unix添加了许多功能。然后在1979年，推出了一个自家的Unix版本，取名为Berkeley Software Distribution（伯克利软件套件），简称BSD。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031803.jpg" /></p>

<p>3.</p>

<p>正当Unix蓬勃发展之际，发生了一件谁也没有想到的事情。</p>

<p>1974年，美国司法部再次起诉AT&T违反《反垄断法》。1982年，哥伦比亚地区法庭判决AT&T败诉，必须被拆成8家小公司。但是，这个判决也意味着1958年的和解协议失效，AT&T从此可以进入计算机业。</p>

<p>1983年，AT&T发布了Unix最新版system V，这是一个商业化版本，付费才能使用，并且不得传播源码。这个决定对BSD构成了限制，为了减少纠纷，伯克利分校规定，BSD本身依然保持免费，但是只能提供给持有AT&T源码许可的公司。不过，与此同时，伯克利的师生也开始着手另一项工作：将AT&T的专有代码从BSD中逐渐去除。</p>

<p>80年代后期，几个伯克利毕业的学生，成立了一家Berkeley Software Design Inc.公司，简称BSDi，专门销售BSD的一个商业版本。他们在广告中宣称，自己的产品不包含任何AT&T代码。这句话惹恼了AT&T，1990年BSDi被告上法庭，稍后伯克利分校也被追加为被告。AT&T起诉BSD侵犯了Unix的版权。</p>

<p>这场诉讼对BSD打击极大，所有的开发活动都被迫停止，用户人心惶惶，担心自己也遭到AT&T的追究，因此BSD的使用急剧减少。最后在1994年，双方达到和解，BSD才恢复开发。</p>

<p>4.</p>

<p>AT&T与BSD之间的诉讼，是当代版权制度最恶劣的应用之一。</p>

<p>为什么这么说？</p>

<p>首先，起诉者其实与Unix毫无关系。这是AT&T经理层的决定，而不是开发者的决定。事实上，包括Ken Thompson在内的技术人员一直希望，公司能够公开源码。他们完全有理由这么要求，因为Unix从来不是AT&T的业务重点，最初是个人项目，后来也没有占用公司太多资源。销售Unix的利润，在公司全部业务中，几乎可以忽略不计。为了一点点钱，去打击一个使许多人受益的产品，何必这样做呢。</p>

<p>其次，AT&T根本不关心Unix的发展。它真正关心的是金钱和削弱对手。1994年，官司还没有结束，它就把Unix卖给了Novell公司，从此不再与Unix发生关系，官司也因此不了了之。既然你不想要这个产品，为什么要提起诉讼呢？真是不可理解。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031804.jpg" /></p>

<p>最后，所谓的侵权几乎是不存在的。因为Novell从AT&T买下Unix版权后，检查了BSD的源码，在18000个组成文件中删除了3个，并对其他文件做了一些小修改，然后BSD就重新获得了自由发布源码的许可。这意味着，至多只有千分之一的BSD代码有版权问题，但是就因为这千分之一的问题，导致百分之百的产品被迫中断，完全不符合比例原则。</p>

<p>所以，这场版权官司就是一家利益至上的公司，以微不足道的理由，为了一个自己根本不在乎的产品，悍然发动一场损人不利己的战争。</p>

<p>5.</p>

<p>这场战争给Unix和BSD带来毁灭性的打击。</p>

<p>从八十年代中后期开始，AT&T固执地捍卫Unix版权，完全不顾它的创造者和开发者的愿望，导致Unix丧失活力、一蹶不振，大量开发者无法参与，只好离开了这个平台。</p>

<p>而BSD在1992~1994年期间，开发处于停滞，错过了发展的黄金时机。官司结束以后，又不幸发生分裂，变成了FreeBSD、NetBSD和OpenBSD三个版本。这些原因导致BSD直到今天，都还在操作系统的竞争中处在落后地位。</p>

<p>如果换个时间，官司的损失也许还没这么大。偏偏90年代初是计算机工业决定性的年代，错过了那几年，从此你就不要想翻身了。因为从80年代末期开始，Intel的80x86芯片有巨大的发展，性能快速上升，而成本快速下降，个人电脑的年代就要到来了。市场迫切需要能够运行在386芯片上的操作系统，但是Unix和BSD忙于打官司，都没有去做移植操作系统这件事。其他两个这样做的人，改变了人类历史。</p>

<p>一个是比尔·盖茨，他推出了Windows，占领了个人电脑市场，后来赚了几百亿美元。另一个是芬兰大学生Linus Torvalds，他想学习Unix，但是买不起工作站，就自己写了一个能在386上运行的Linux操作系统，现在全世界超过一半的网络服务器都在使用这个系统。Linus Torvalds后来说，如果他早知道BSD没有法律问题，并且可以被移植到386，他就会加入BSD的开发，而不是自己写一个。</p>

<p>我们不禁要问，如果AT&T不打版权官司、不对Unix收费的话，会发生什么事？……人类的历史、市场的格局也许都会被改写。</p>

<p>6.</p>

<p>Novell买到Unix版权后，也没在手里放多久，1995年又转手卖给了别人。从此，Unix原始版本的开发正式结束。</p>

<p>以后的发展集中在两个方向，一个是各个商业公司自己修改的Unix版本，比如Sun的Solaris，HP的HP-UX，IBM的AIX，另一个则是开源项目的开发，比如BSD和Linux。</p>

<p>（完） </p>]]>
    </content>
</entry>
<entry>
    <title>为什么Joel不谈软件了？</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/why_joel_stopped_blogging.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1355" title="为什么Joel不谈软件了？" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1355</id>
    
    <published>2010-03-16T11:52:59Z</published>
    <updated>2010-03-16T11:53:21Z</updated>
    
    <summary>3月初的时候，Joel发布了一个惊人消息（中文版见下文）。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="mjos" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>3月初的时候，Joel发布了一个<a href="http://www.inc.com/magazine/20100301/lets-take-this-offline.html" target="_blank">惊人消息</a>（中文版见下文）。</p>]]>
        <![CDATA[<p>他将不再写作网志了！就在3月17日，<a href="http://www.joelonsoftware.com/" target="_blank">“Joel谈软件”</a>开张十周年的纪念日，他就会停止自己的写作。</p>

<p>全世界排名第一的程序员网志要关门了？我简直不敢相信，不知道3月17日他会怎么告别，只能心神不宁地等着那一天。</p>

<p>结果昨天晚上，Joel出人意料地贴了一篇<a href="http://www.joelonsoftware.com/items/2010/03/14.html" target="_blank">新文章</a>，做了一些澄清。</p>

<p>首先，关于软件开发的文章，确实不会再写了，因为除了声明中提到的原因，Joel感到他已经有点在重复自己了。其次，讨论技术细节的文章，以后依然会写，比如<a href="http://hginit.com/" target="_blank">Mercurial教程</a>。最后，近期还会有一篇关于Twitter的文章，已经写了一半。</p>

<p>我对此感到很可惜，又一个自己喜欢的作者要从网上消失了。而且，Joel的风格太独特，将来恐怕不会再有这样的人了，滔滔不绝地把自己对软件开发的想法写成1000篇文章，免费给大家看，一写就是10年，而且写得那样生动活泼、富有启迪。这样的事情只可能在互联网诞生的初期发生，只有那种时候，才会让人产生异乎寻常的创造力和热情，因为无论你做什么，都是前无古人的，你都是在创造。等到网络模式成熟了，大家也就司空见惯了，没有太高的热情了，一切都是循规蹈矩。另一方面，我也很高兴，幸亏自己翻译了<a href="http://www.ruanyifeng.com/mjos/" target="_blank">Joel的一本书</a>，否则未来恐怕不会遇到这样的机会。</p>

<p>下面就是Joel告别Blog的声明，像他的其他文章一样，包含着令人深思的观点，非常值得一看。不知道这是不是最后一次我翻译他的文章了，但愿不是吧。</p>

<p>=======================</p>

<p><strong>告别网志的时候到了</strong></p>

<p>作者：Joel Spolsky</p>

<p>译者：阮一峰</p>

<p>发表日期：2010年3月1日</p>

<p>出处：<a href="http://www.inc.com/magazine/20100301/lets-take-this-offline.html" target="_blank">inc.com</a></p>

<p><br />
你创立了一家公司，做出了一种优秀的产品，现在你需要把消息传播出去。但是，你没有钱买广告，也没有钱雇佣公关公司，你的预算最多只够雇一个销售员。然而优秀的销售员都是聪明人，不会糊涂到愿意为你这样的小公司工作。</p>

<p>所以，你总是会想到网志。</p>

<p>当前，好像每一个初创公司，都有一个自己的网志。但是，其中99%都有问题。什么问题呢？那就是他们在网志中只谈自己，发一些招聘消息，展示一些新产品，秀一下员工一起野餐的照片。这样的文章，看上去当然很可爱。你的亲爱的妈妈，肯定很喜欢读。但是糟糕的是，除了你的妈妈，其他人都不感兴趣。大多数的企业网志，几乎没有任何读者，没有访问量，对销售也毫无影响。长此以往，网志的更新也越来越少，间隔的周期越来越长（如果撰写网志的责任由多个员工承担，情况就更是如此），最终网志就变得荒芜了。</p>

<p>我开始写“Joel谈软件”的时候，几乎没什么人写网志。那是10年前的事，那时我甚至还没有成立自己的公司。我的网志很快就在程序员中变得流行了，上面有各种各样的内容——如何写出漂亮的代码，如何在短得不合理的时间中拿出产品，如何得到更多的薪水等等。访问人数一直在上升，到了后来，一个月的独立访问者超过100万人。它也使得人们对我的公司“Fog Creek”和我们的产品，产生了兴趣。</p>

<p>那么，企业网志的成功秘诀是什么？怎样才能把网志转化为影响力、销售额和利润？其实，我自己都不太清楚应该怎么做。直到去年，我参加了一个软件研讨会，在会上，一个著名的游戏开发者Kathy Sierra做了一个发言，我听了以后茅塞顿开。她讲了一个很简单的观点，完全解释了为什么我的网志能为我带来商业成功，而其他那么多公司的网志都做不到。</p>

<p>根据她的观察，要让企业网志真正有影响力，就必须谈一些比你的公司、你的产品更大的东西。这听起来不难，但是实际上不是，你需要严格的自律，不谈你自己和你的公司。表面上，网志似乎是一种个人化的媒体，很多时候确实如此。但是，Kathy Sierra说，一旦你使用网志来推广企业，你就不能用它谈论自己感兴趣的事情。你必须谈一些你的读者愿意看到、或者希望看到的东西，这样他们才会变成你的客户。你必须让你的读者感到满意。</p>

<p>举例来说，如果你销售的是照相机的闪光灯，你就不要去谈产品的技术细节，也不要去谈旺季的促销计划（优惠10%！）。你要介绍拍出优秀照片的10个窍门。</p>

<p>如果你开餐馆，网志就不要介绍你的菜单，而要介绍一些好吃的食品。你这样才能吸引，对你的餐馆不感兴趣的饕客。</p>

<p>如果你生产高档巧克力，就不要在网志上写你去多米尼加共和国收购可可豆的旅程，因为这只对你个人有意义。你应该写详细的教程，介绍如何自己做出草莓巧克力。以后的十年中，任何一个美食家或面包师，想在Google中找到制作草莓巧克力的方法，他就会发现你的文章。帮助你的读者做出美味食品，很可能会吸引来一些这种食品的购买者，这就是一个成功的企业网志的意义。介绍前往多米尼加的旅程，只能吸引那些想去多米尼加的人。除非你是搞旅游的，否则你不应该写这个内容。</p>

<p>回顾起来，“Joel谈软件”实际上是一本内容高度集中、专门写给程序员看的小型杂志，以介绍一些软件开发的实用主义观点为主。我也利用它，为自己的公司做免费广告，但是那些广告实际上更接近社论，而不像商业目的的广告。我写的最受欢迎的文章，都与我自己和我的公司无关，比如我写过如果软件公司想要重构代码，那么千万不要推倒重来。</p>

<p>一旦大量的程序员成为了我的读者，他们中的许多人就会变成我的公司的顾客。因为读者群实在是太集中了，导致我们公司开发的产品，只有供程序员使用的才会成功，其他的都不成功。那些都是很优秀的产品，但是就是不成功，因为它们不是供程序员使用的，而我们又没有能力将它们推广到非程序员的目标客户中。</p>

<p>当然，网志占用了我大量时间。它是一种劳动密集型的手工推销方式。合计起来，我用来做自己的网站、写作相关书籍、录制视频、参加网志会议等等的时间，大约占到过去十年我创业总的投入时间的三分之一。那也就是整整三到四年的工作量。</p>

<p>这样做是否值得？你也应该这样写网志吗？</p>

<p>这样说吧，我很受用这个方式，但是当我观察其他人越多，就越发现很多成功的初创公司，不把大量早期创业时间用来架设一个受欢迎的网志，结果也能得到客户，并且快速地发展起来。</p>

<p>而且，更麻烦的是，除了我自己之外，我真的找不到其他任何通过写网志而获得成功的企业家。</p>

<p>过去十年的大热门技术公司，往往都没有一个像样的网志。Twitter、Facebook、Google的网志，都充满了喋喋不休、乏味透顶的新闻稿，最多只是略加改写，好让文章看上去不是那么一本正经。Apple公司实际上根本没有网志，哪怕它开发出了好几样优秀的革命性产品。同时，微软公司倒是有相当一大批很不错的网志，但是毫无作用，这家公司还是给人一种笨重迟暮的印象。</p>

<p>所以，我觉得是时候了，应该从网络日志中退休了，能够在狭小美好的程序员世界成为一个互联网名人，已经足够了。3月17日就是“Joel谈软件”开张十周年的纪念日，我将最后发一篇正式的文章。同时，正常情况下，我也将停止录制视频节目和公开演讲。Twitter？“那玩意太可怕了，我不会去玩的。抱歉，我没法只用140个字母，就告诉你原因。”</p>

<p>真正原因是，虽然我一如既往喜欢写Blog，但是我的时间越来越少了，因为Fog Creek正在不断发展壮大。我们现在有32个雇员，以及至少6条正式的产品线。我们的顾客也已经多到令我无法自由写作的地步，我很怕自己漫不经心写出的一句话，会侮辱到某位顾客。我的日常工作占用了大量时间，以至于无法集中精力，写作一点有思想性的东西，哪怕每个月只写一篇到两篇。</p>

<p>大量证据也表明，推广Fog Creek的产品有很多有效的其他方法。过去，我们倚重网志作为营销渠道，忽略了其他方法。我现在意识到，网志使得我和Fog Creek，成为了一个很小的池塘中的大鱼。结果就是，对于那些经常阅读网志的5%~10%的程序员来说，我们是无可争议的头号产品。同时，对于除此之外的每个人，我们完全是默默无名的。</p>

<p>我希望，放弃网志就好像让一个双眼发展不均衡的孩子，戴一付眼镜。是时候让那只好的眼睛休息一会，而让那只比较弱的眼睛有一个成长的机会了。我的公司需要证明一点，就是我们不依赖于单一渠道推广自己的产品，这是任何一家其他公司都已经明白的道理。在目标市场的一个细分领域中，我们已经彻底做到饱和了，现在我们不得不去大得多的其他领域，寻找更多的潜在顾客。</p>

<p>对于我的读者，感谢你们过去10年中对我的关注。没有你们，我不可能做成这个网志。感谢你们高质量的Email、留言、twitter发言、评论文章，所有这一切使得我的过去10年成为一次美好的旅程。我很享受我们在网上形成的这种关系，期待未来在我的公司的某个发展阶段，我能够与你们有面对面的交流。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>CSS3常用功能的写法</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/cross-browser_css3_features.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1354" title="CSS3常用功能的写法" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1354</id>
    
    <published>2010-03-15T08:51:01Z</published>
    <updated>2010-03-15T09:16:29Z</updated>
    
    <summary>随着浏览器的升级，CSS3已经可以投入实际应用了。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="CSS" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>随着浏览器的升级，CSS3已经可以投入实际应用了。</p>]]>
        <![CDATA[<p>但是，不同的浏览器有不同的CSS3实现，兼容性是一个大问题。上周的<a href="http://developer.yahoo.net/blog/archives/2010/03/tech_thursday_css3_please_trojans_via_usb_ibm_visualization_engine_and_mosaic_source_code.html" target="_blank">YDN</a>介绍了<a href="http://css3please.com/" target="_blank">CSS3 Please</a>网站，该网站总结了一些常用功能的写法。</p>

<p>以下就是这些写法的详细介绍。所有代码都经过了Firefox 3.6和IE 8.0的验证，原文的错误之处也已得到改正。</p>

<p><strong>一、圆角（Rounded Corner）</strong></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031501.png" /></p>

<blockquote><div>

<p>.box_round {</p>

<p>　　-moz-border-radius: 30px; /* FF1+ */</p>

<p>　　-webkit-border-radius: 30px; /* Saf3+, Chrome */</p>

<p>　　border-radius: 30px; /* Opera 10.5, IE 9 */</p>

<p>}</p>

</div></blockquote>

<p>圆角的实现比较简单，只要设好一个半径值就可以了。遗憾的是，目前所有的IE都不支持CSS圆角，要等到IE 9才行。</p>

<p><strong>二、盒状阴影（Box Shadow）</strong></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031502.png" /></p>

<blockquote><div>

<p>.box_shadow {</p>

<p>　　-moz-box-shadow: 3px 3px 4px #ffffff; /* FF3.5+ */</p>

<p>　　-webkit-box-shadow: 3px 3px 4px #ffffff; /* Saf3.0+, Chrome */</p>

<p>　　box-shadow: 3px 3px 4px #ffffff; /* Opera 10.5, IE 9.0 */</p>

<p>　　filter:  progid:DXImageTransform.Microsoft.dropshadow(OffX=3px, OffY=3px, Color='#ffffff'); /* IE6,IE7 */</p>

<p>　　-ms-filter: "progid:DXImageTransform.Microsoft.dropshadow(OffX=3px, OffY=3px, Color='#ffffff')"; /* IE8 */<br />
}</p>

</div></blockquote>

<p>-moz-box-shadow、-webkit-box-shadow和box-shadow的设置是一样的，都有4个参数，含义分别为：x轴偏移值、y轴偏移值、阴影的模糊度、以及阴影颜色。</p>

<p>IE 6~8使用其独有的滤镜，需要设置三个参数：offX（X轴偏移值）、offY（Y轴偏移值）、Color（阴影颜色）。</p>

<p><strong>三、线性渐变（Gradient）</strong></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031503.png" /></p>

<blockquote><div>

<p>.box_gradient {</p>

<p>　　background-image: -moz-linear-gradient(top, #444444, #999999); /* FF3.6 */</p>

<p>　　background-image: -webkit-gradient(linear,left top,  left bottom, color-stop(0, #444444),color-stop(1, #999999)); /* Saf4+, Chrome */</p>

<p>　　filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#444444', endColorstr='#999999', GradientType='0'); /* IE6,IE7 */</p>

<p>　　-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#444444', endColorstr='#999999',GradientType='0')"; /* IE8 */</p>

<p>}</p>

</div></blockquote>

<p>先看Firefox。</p>

<blockquote><div>

<p>-moz-linear-gradient(top, #444444, #999999);</p>

</div></blockquote>

<p>-moz-linear-gradient有三个参数。第一个参数表示线性渐变的方向，top是从上到下、left是从左到右，如果定义成left top，那就是从左上角到右下角。第二个和第三个参数分别是起点颜色和终点颜色。你还可以在它们之间插入更多的参数，表示多种颜色的渐变。</p>

<blockquote><div>

<p>-webkit-gradient(linear,left top,  left bottom, color-stop(0, #444444),color-stop(1, #999999));</p>

</div></blockquote>

<p>-webkit-gradient是webkit引擎对渐变的实现，一共有五个参数。第一个参数表示渐变类型（type），可以是linear（线性渐变）或者radial（辐射渐变）。第二个参数和第三个参数，都是一对值，分别表示渐变起点和终点。这对值可以用坐标形式表示，也可以用关键值表示，比如left top（左上角）和left bottom（左下角）。第四个和第五个参数，分别是两个color-stop函数。color-stop函数接受两个参数，第一个表示渐变的位置，0为起点，0.5为中点，1为结束点；第二个表示该点的颜色。</p>

<blockquote><div>

<p>DXImageTransform.Microsoft.gradient(startColorstr='#444444', endColorstr='#999999', GradientType='0');</p>

</div></blockquote>

<p>IE依靠滤镜实现渐变。startColorstr表示起点的颜色，endColorstr表示终点颜色。GradientType表示渐变类型，0为缺省值，表示垂直渐变，1表示水平渐变。</p>

<p><strong>四、透明（opacity）</strong></p>

<p>正常情况下，上层的对象会覆盖下层的对象。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031504.png" /></p>

<p>但是，如果将上层对象的颜色变为透明，就可以透过它看到下层对象。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031505.png" /></p>

<blockquote><div>

<p>.box_rgba {</p>

<p>　　background-color: #B4B490;</p>

<p>　　background:transparent;</p>

<p>　　filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#99B4B490',endColorstr='#99B4B490'); /* IE6,IE7 */</p>

<p>　　-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#99B4B490',endColorstr='#99B4B490')"; /* IE8 */</p>

<p>　　zoom: 1;</p>

<p>　　background-color: rgba(180, 180, 144, 0.6);  /* FF3+, Saf3+, Opera 10.10+, Chrome */</p>

<p>}</p>

</div></blockquote>

<p>先看第一行。</p>

<blockquote><div>

<p>background-color: #B4B490;</p>

</div></blockquote>

<p>这是设置对象的预备色，也就是不透明时的颜色。如果浏览器不支持透明，就将显示这个颜色。</p>

<blockquote><div>

<p>background:transparent;</p>

<p>filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#99B4B490',endColorstr='#99B4B490'); /* IE6,IE7 */</p>

<p>-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#99B4B490',endColorstr='#99B4B490')"; /* IE8 */</p>

<p>zoom: 1;</p>

</div></blockquote>

<p>这几行是专门为IE写的，其中主要用到 DXImageTransform.Microsoft.gradient滤镜。我们要为它设置起点色（startColorstr）和终点色（endColorstr）。在单色透明的情况下，这两个值是相同的。需要注意的是，它们的取值是一个八位的十六进制值，前两位表示alpha通道值，00表示完全透明，FF表示完全不透明；后六位则是这个颜色的RGB值。</p>

<blockquote><div>

<p>background-color: rgba(180, 180, 144, 0.6); </p>

</div></blockquote>

<p>除了IE，其他浏览器几乎都支持rgba函数。它有四个参数，前三个为一种颜色的RGB值，第四个为透明度，这里设为0.6。</p>

<p><strong>五、旋转（rotation）</strong></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031506.png" /></p>

<blockquote><div>

<p>.box_rotate {</p>

<p>　　-moz-transform: rotate(7.5deg);  /* FF3.5+ */</p>

<p>　　-o-transform: rotate(7.5deg);  /* Opera 10.5 */</p>

<p>　　-webkit-transform: rotate(7.5deg);  /* Saf3.1+, Chrome */</p>

<p>　　filter: progid:DXImageTransform.Microsoft.Matrix(M11=0.9914,M12=-0.1305,M21=0.1305,M22=0.9914,SizingMethod='auto expand');</p>

<p>　　-ms-filter: "progid:DXImageTransform.Microsoft.Matrix(M11=0.9914,M12=-0.1305,M21=0.1305,M22=0.9914,SizingMethod='auto expand')"; /* IE8 */</p>

<p>}</p>

</div></blockquote>

<p>除了IE以外，其他浏览器都是用rotate函数，实现某个对象的旋转。比如rotate(7.5deg)就表示顺时针旋转7.5度（degree）。<br />
 <br />
IE则需要用到一个复杂的滤镜DXImageTransform.Microsoft.Matrix。它一共接受五个参数，前四个参数需要自行计算三角函数，然后分别写成M11 = cos(rotation),M12 = -sin(rotation),M21 = sin(rotation),M22 = cos(rotation)，其中的rotation表示旋转角度，如果顺时针旋转7.5度，则rotation就为7.5；第五个参数SizingMethod表示重绘方式，'auto expand'代表自动扩展到新的边界。</p>

<p>除了这个滤镜，IE还有一个稍微简单一点的滤镜DXImageTransform.Microsoft.BasicImage(rotation=x)。其中的x只能取值为1，2，3，0，分别表示顺时针选择90度、180度、270度和360度。</p>

<p><strong>六、服务器端字体（font-face）</strong></p>

<p>设计网页的时候，可能会用到某种特殊的字体。如果用户的机器中没有安装，文字只能以普通字体显示。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031507.png" /></p>

<p>这时可以让用户的浏览器自行下载服务器端字体，然后就能呈现出设计者想要的效果。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031508.png" /></p>

<blockquote><div>

<p>@font-face {</p>

<p>　　font-family: 'MyFont';</p>

<p>　　src: url('myfont.eot');  /* IE6+ */</p>

<p>　　src: local('myfont.ttf'), </p>

<p>　　url('myfont.woff') format('woff'),  /* FF3.6 */</p>

<p>　　url('myfont.ttf') format('truetype');  /* FF3.5+, Saf3+,Chrome,Opera10+ */</p>

<p>}</p>

</div></blockquote>

<p>第一行代码：</p>

<blockquote><div>

<p>font-family: 'MyFont';</p>

</div></blockquote>

<p>表示为这种字体起一个名称，可以随意设置，我这里用的是MyFont。</p>

<blockquote><div>

<p>src: url('myfont.eot');</p>

</div> </blockquote>

<p>这一行表示字体位置，由于ie只支持服务器端的<a href="http://en.wikipedia.org/wiki/Embedded_OpenType" target="_blank">eot字体</a>，所以这一行是ie专用的。</p>

<blockquote><div>

<p>src: local('myfont.ttf'), </p>

<p>　　url('myfont.woff') format('woff'),  </p>

<p>　　url('myfont.ttf') format('truetype');</p>

</div></blockquote>
 
local()表示在本机（客户端）查找该字体，如果本机已经安装了，就不用下载了。url()表示字体在服务器上的位置，format()用来说明字体格式。Firefox 3.5支持TrueType和OpenType字体，Firefox 3.6又增加了WOFF字体。其他基于Webkit引擎的浏览器（sarif，opera、chrome），目前好像只支持truetype。

<p>然后，使用的时候这样写就可以了。</p>

<blockquote><div>

<p>h2{ font-family: "MyFont"; }</p>

</div></blockquote>

<p>需要注意的是，字体文件必须与网页文件来自同一个域名，符合浏览器的“同源政策”。另外，由于中文字体文件太大，服务器端字体显然只适用于英文字体。</p>

<p><strong>七、其他</strong></p>

<p>利用css3，还可以完成transform（变形），包括skew（扭曲）和scale（缩放），以及css transitions（动态变换）。这些内容待以后再补充。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>美国电影《以眼杀人》</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/the_men_who_stare_at_goats.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1353" title="美国电影《以眼杀人》" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1353</id>
    
    <published>2010-03-13T16:53:57Z</published>
    <updated>2010-03-13T17:29:12Z</updated>
    
    <summary>这是一年来，我看过的最讽刺的电影。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Movies" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>这是一年来，我看过的最讽刺的电影。</p>]]>
        <![CDATA[<p>它极尽所能讽刺了美军。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031301.jpg" /></p>

<p>在电影中，美军为了更有效地击败敌人，找来了一批具有特异功能的人，训练他们用意识杀人。</p>

<p>简单说，就是让他瞪大眼镜。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031302.jpg" /></p>

<p>盯着一只山羊。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031304.jpg" /></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031303.jpg" /></p>

<p>然后，山羊就突然倒地，抽搐而死。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031305.jpg" /></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031306.jpg" /></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031307.jpg" /></p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010031308.jpg" /></p>

<p>===========================</p>

<p>看完这部电影，我突然觉得，自己也能写一个剧本。</p>

<p>剧本的开头是这样的：</p>

<p>　　（镜头缓缓穿过紧闭的金属门，切入室内。门口有人站岗。）</p>

<p>　　（那是一间空旷的、大得像篮球场一样的会议室，中间放着一张巨大无比的圆形会议桌。大概有20多人坐在桌旁，正在开会。有人在发表讲话，其他人在做笔记。）</p>

<p>—— 同志们，目前的局势很严重，出现了许多不利因素。社会上有许多不好的风气，正在愈演愈烈。</p>

<p>　　（随着他的讲话，相应的蒙太奇镜头一一插入。）</p>

<p>—— 有一张床可以睡觉，却还抱怨没有住房；明明知道中国地少人多，却还认为房价昂贵；手机中有淫秽信息，却不愿意电信公司审查短信；有高速的地铁可以乘坐，却嫌入口处的安检太麻烦；有股市和彩票可以赚钱发财，却还要求提高养老金和医疗保险；自己工作不努力，失业下岗，却要求政府负责；为了个人的一点小事，到处大吵大闹，却不知道保持社会稳定是每一个人的责任；每到逢年过节，都会有下基层的领导，却还说意见无法向上反映；每天晚上可以看免费的CCTV，却还想装卫星天线；网上有内容丰富、制作精良的新华网，却还要上Google。</p>

<p>　　（镜头切回到会场。发言者提高了语调。）</p>

<p>—— 同志们，这些落后的思想，正在侵蚀群众，使得一部分人变得蛮不讲理，到处滋事煽动，成为社会的不安定因素。国际上的敌对势力，正在利用这些人来渗透、攻击、颠覆我们。长此以往，后果将不堪设想。</p>

<p>—— 同志们，新的时代对我们的执政能力，提出了新的挑战。我们亟需采用具有时代特征的新方法，加强对人民的教育，更好地领导人民。</p>

<p>　　（镜头一一扫过听众。他们还是在不断地做笔记，或者是一付若有所思的样子。）</p>

<p>—— 同志们，为了适应这个高科技的时代，适应复杂多变的形势，适应许多以前没有出现过的情况，我们必须采用一些前所未有的手段。</p>

<p>—— 我们要达到人类灵魂的深处，从内部彻底教育那些思想落后的群众，彻底改造那些不安定分子。</p>

<p>　　（所有的听众都停了下来，抬起头，看着发言者。）</p>

<p>　　（发言者一挥手，秘书小姐从门口走进来，向每个听众发了一份报告。）</p>

<p>—— 大家拿到的报告，来自国防部、科技部、安全部、卫生部、宣传部的联合工作小组。他们发现，全国有13个基因突变者，具备心灵震慑能力。简单说，就是当他们与别人双目相对，就能让对方接受他们的想法。</p>

<p>　　（屏幕上出现了一双睁开的眼睛的特写。眼神极为犀利。）</p>

<p>—— 我们需要这些人，建立与群众心与心交流的渠道，让群众向我们交心，从心灵深处说服群众。</p>

<p>—— 只有这样做，我们的国家才能彻底保持稳定。我们才能挫败国内外敌对势力的进攻。</p>

<p>　　（片名《心灵战士》切入。背景音乐响起。）</p>

<p>　　（画面切换，出现一行字。“献给在净化灵魂战线上工作的人们”。）</p>

<p>……</p>

<p>……</p>

<p>这个剧本怎么样？</p>

<p>我在后面还设想了一些情节。后来，哪怕是没有太阳的大冬天，路上所有人都带着墨镜，行迹匆匆，说话不看对方眼睛，因为害怕一看，自己的心就没了。再后来，这个城市中除了瞎子，大家都被人看过了……好像还挺有趣的，编剧看来是一个不错的职业。</p>

<p>对了，差点忘了声明。以上故事，纯属虚构。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>碧姬·巴铎</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/brigitte_bardot.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1352" title="碧姬·巴铎" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1352</id>
    
    <published>2010-03-11T04:34:56Z</published>
    <updated>2010-03-11T04:35:07Z</updated>
    
    <summary>下面这组照片，真是令我赞叹不已。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Photography" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>下面这组照片，真是令我赞叹不已。</p>]]>
        <![CDATA[<p>===============================</p>

<p><strong>碧姬·巴铎（Brigitte Bardot）</strong></p>

<p>时间：1955年</p>

<p>摄影师：Gaston Paris</p>

<p>1.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot01.jpg" /></p>

<p>2.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot02.jpg" /></p>

<p>3.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot03.jpg" /></p>

<p>4.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot16.jpg" /></p>

<p>5.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot18.jpg" /></p>

<p>6.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot17.jpg" /></p>

<p>7.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot19.jpg" /></p>

<p>8.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot20.jpg" /></p>

<p>9.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot21.jpg" /></p>

<p>10.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot22.jpg" /></p>

<p>11.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot23.jpg" /></p>

<p>12.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot25.jpg" /></p>

<p>13.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot24.jpg" /></p>

<p>14.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot27.jpg" /></p>

<p>15.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot26.jpg" /></p>

<p>16.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot28.jpg" /></p>

<p>17.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot29.jpg" /></p>

<p>18.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot32.jpg" /></p>

<p>19.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot31.jpg" /></p>

<p>20.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot30.jpg" /></p>

<p>21.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot33.jpg" /></p>

<p>22.</p>

<p><img src="http://image.beekka.com/blog/bardot/bardot35.jpg" /></p>

<p>================================</p>

<p>看完照片，我就干了一件让自己后悔不已的事情：上网搜索“Brigitte Bardot”。结果，……</p>

<p>——<strong>警告</strong>：如果你想永久保留美好印象，请不要点击下面的链接。</p>

<p>因为你会看到，<a href="http://image.beekka.com/blog/bardot/bardot36.jpg" target="_blank">1968年</a>和<a href="http://image.beekka.com/blog/bardot/bardot37.jpg" target="_blank">2003年</a>的她，然后你就会像我一样后悔。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>搭建了一个图片库</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/built_a_image_server.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1351" title="搭建了一个图片库" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1351</id>
    
    <published>2010-03-09T13:33:39Z</published>
    <updated>2010-03-09T13:33:47Z</updated>
    
    <summary>经常有读者抱怨，看不到网志中的图片。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="My_Website" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>经常有读者抱怨，看不到网志中的图片。</p>]]>
        <![CDATA[<p>确实如此。正常情况下，过去文章中的图片，超过60%都无法在国内正常显示。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010030904.png" /></p>

<p>但是，事实上，这个网志的所有图片链接都是有效的，没有一个链接是坏的。无法显示只是因为被屏蔽了，只要你不在中国大陆，所有图片都能看到。</p>

<p>最早的时候，我使用<a href="http://www.flickr.com/" target="_blank">Flickr</a>存放图片。但是2007年，Flickr被屏蔽了。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010030901.png" /></p>

<p>后来，我改用<a href="http://picasaweb.google.com/" target="_blank">Picasa</a>存放图片。2009年，Picasa也被屏蔽了。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010030902.png" /></p>

<p>我又改用<a href="http://photobucket.com/" target="_blank">Photobucket</a>。2010年1月，Photobucket也被屏蔽了。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010030903.png" /></p>

<p>怎么办？再换一个地方流浪，还是使用国内的图片储存服务？</p>

<p>我觉得，任何可以免费存放图片的国外服务商，都有可能被屏蔽；而国内的图片服务商，我真的信不过。比如，国内某网站的使用协议写明，他们可以随时无条件删除你的图片，并且不允许上传任何有性意味的图片。</p>

<p>所以，我最后决定，自己搭一个图片库，把图片都存在自己的主机上。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010030905.jpg" /></p>

<p>我的思路很简单，先搭建一个开源相册程序，然后修改成Flickr那样就行了。</p>

<p>一开始，我装的是<a href="http://movabletype.org/" target="_blank">Movable Type</a>。毕竟这是每天用的程序，我最熟悉了。但是，我很快发现，它不可能改成相册。MT的长处是生成静态网页，而相册需要的是动态显示，两者根本无法融合。另一方面，MT的开发现在很不景气，<a href="http://www.movabletype.org/cgi-bin/mt/mt-search.cgi?IncludeBlogs=32&search=gallery&x=0&y=0" target="_blank">第三方插件</a>极少，甚至连<a href="http://www.eatdrinksleepmovabletype.com/plugins/better_file_uploader/" target="_blank">ajax上传按钮</a>都没有，必须花20美元购买商业插件，否则文件只能一个个上传。我只好放弃它了。</p>

<p>改用<a href="http://wordpress.org/" target="_blank">WordPress</a>以后，我又遇到了另一个问题，那就是插件太多了。WP的<a href="http://wordpress.org/extend/plugins/tags/gallery" target="_blank">相册插件</a>足有几十种之多，我不知道该如何选择。有一个<a href="http://wordpress.org/extend/plugins/nextgen-gallery/" target="_blank">NextGEN Gallery</a>插件的下载人数最多，我就选了它。结果发现，这个插件实在是太优秀了，专业图片网站的功能，它几乎都能实现，而且做得非常易用漂亮。如果你也想搭一个自己的相册，我强烈推荐这个插件。</p>

<p>最后，我搭建完成的图片库网址是<strong><a href="http://image.beekka.com" target="_blank">http://image.beekka.com</a></strong>，欢迎查看效果。这篇文章里的图片，都是来自那里。因为相册只供我个人使用，所以做得比较粗糙，但是我想要的功能都做到了。</p>

<p><a href="http://alexrabe.de/wordpress-plugins/nextgen-gallery/" target="_blank">NextGEN Gallery</a>的详细使用说明，请参见<a href="http://dpotter.net/Technical/2008/03/nextgen-gallery-review-introduction/" target="_blank">David Potter</a>的长篇介绍。我修改的地方，其实只有2个文件。</p>

<p>　　1. 在“Options/Gallery”中的“Show ImageBrowser”选项打勾。</p>

<p>　　2. 修改插件中的gallery.php文件。</p>

<p>　　3. 修改插件中的imagebrowser.php文件。</p>

<p>所有的图片信息，基本上都包含在$image这个对象变量中。使用&lt;?php var_dump($image) ?&gt;查看变量，使用&lt;?php echo $image->filename ?&gt;输出变量值（比如例子中的图片文件名）。</p>

<p>当然，这个图片库也不一定安全，照样有可能被屏蔽。但是，至少一切都在我的控制之中。万一被屏蔽了，只要对图片储存目录打包压缩，然后换一台主机解开压缩包就行了。</p>

<p>我感到，这个图片存储的解决方案有推广意义，值得其他网志作者考虑。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>我所知道的深圳八卦岭小印刷厂</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/some_printing_workshops_in_shenzhen.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1350" title="我所知道的深圳八卦岭小印刷厂" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1350</id>
    
    <published>2010-03-06T12:23:24Z</published>
    <updated>2010-03-06T12:23:33Z</updated>
    
    <summary>上一篇网志《“熔模铸造”图解》发出后，读者emi有一段很长的留言。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Society" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>上一篇网志<a href="http://www.ruanyifeng.com/blog/2010/02/investment_casting.html" target="_blank">《“熔模铸造”图解》</a>发出后，读者emi有一段很长的留言。</p>]]>
        <![CDATA[<p>那是触目惊心的文字，为了让更多的人看到，我决定以单独一篇文章的形式，重贴一次。</p>

<p>===========================</p>

<p><strong>我所知道的深圳八卦岭小印刷厂</strong></p>

<p>作者：emi</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg201030601.jpg" /></p>

<p>去年，我参观了深圳市福田区八卦岭的一些印刷工厂。</p>

<p>那里就是城市里的工业区。印刷厂就设在许多有十几二十年楼龄的老房子里，租金通常是25-30元/平米。</p>

<p>那些印刷厂，通常属于私人或私人合伙所有，一两台印刷机的生产规模，面积100平米至500平米，大一些的为800平米至1000平米。为了节省成本，几乎没什么工作经验的工人也能上岗，并且上岗后基本没有岗前培训，直接干活。</p>

<p>上周，我又去那里，正好是春节后新开工的时间。在楼道遇到一个小伙子，也就十八九岁的样子，举着一支手，其中一根手指被切掉了一截，血一路滴滴嗒嗒往外滴。听说他是新招的工人，被切纸机斩断了手指。切纸机是一种靠重力切断的设备，几百张纸一次切断，何况血肉之躯呢。我想起，在那些印刷厂的生产间里，见过不止一个手指秃秃的工人。</p>

<p>在这些厂里，不仅新招的工人，就连老工人也是没有劳动合同的。所以，发生生产事故后，厂里最多付点医药费，止血包扎一下而已。而这个新招的工人，他除了恳求厂方不要因此将他除名之外，是不敢提任何要求的，因为否则他连一日三餐和住的地方也没有了。（这些工厂的工资很低，但是包吃包住。吃是一日两餐，就在车间里随便找个地方吃。工作时间是早八点到晚八点，中间休息一两小时吃饭上厕所等。住的地方我没去过，但据说是十几人一间的大通铺。）</p>

<p>据了解，这些工人都有一笔押金在厂方手里，这是他们进厂之前，必须要向厂方交纳的，厂里就是靠这笔钱控制工人流失的。为了不损失这笔钱，工人只好听任厂方摆布，让加班就加班、说推迟发工资就推迟发工资、不可以自已提出辞工，还要小心翼翼不能被厂方辞退……</p>

<p>自已提出辞职，厂方就会扣掉那笔进厂押金。若因自已原因被厂里辞退，也是拿不回那笔押金的。因此，对于每月工资千元左右的工人而言，选择权是非常有限的。说到这里，上面那个被切到手指的工人，他的简单包扎医药费也有可能要从自已的进厂押金当中扣除的。</p>

<p>另外，为了节省成本和招揽更多业务，很多印刷厂把办工区的卡座出租给那些跑业务的个人。每个位子每月800-1000元租金，电话网络费用自理（我想，这一招应该是跟出租汽车公司学来的吧）。这样做的好处，一是印刷厂不用养业务员，二是还会有一笔租金收入。</p>

<p>那些业务员由于自负赢亏，所以什么都敢答应，成交价越高越好。同时，由于他们坐在印刷厂里办公，也会给客户造成一种假象，以为自已找到了厂家，必然便宜又放心，以为不会吃亏挨宰。其实，印刷业报价涉及的因素和计算非常繁复，普通人根本没办法清楚分辨，只能模模糊糊被迫同意对方的报价。那些对业务较熟悉，较能说服客户的业务员，收入状况非常不错。</p>

<p>那些业务员通常会虚报一倍甚至两三倍报价，所以只要一个月接到一个单子，几百块钱的卡座租金便简直不在话下，收入也有了保障。但是，这样一来，整个行业显得乌烟障气，非常混乱。</p>

<p>至于那些开印刷厂、赚了些钱的小老板，他们工作之余做什么呢？无非就是打麻将，赌博。所以，我去不少印刷厂，常能见到麻将桌上散乱的牌张、红着眼睛熬夜后中午才来上班的这些人。</p>

<p>【相关文章】</p>

<p>* <a href="http://www.ruanyifeng.com/blog/2008/01/in_chinese_factories_lost_fingers_and_low_pay.html" target="_blank">《纽约时报》：珠江三角洲，每年4万根手指被切断</a></p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>Jacob Holdt 的美国往事</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/jacob_holdt.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1349" title="Jacob Holdt 的美国往事" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1349</id>
    
    <published>2010-03-04T07:39:26Z</published>
    <updated>2010-03-04T10:15:41Z</updated>
    
    <summary>转载《明镜周刊》的一篇文章。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Photography" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>转载<a href="http://www.spiegel.de/international/zeitgeist/0,1518,678291,00.html" target="_blank">《明镜周刊》</a>的一篇文章。</p>]]>
        <![CDATA[<p>===================================</p>

<p><strong>Jacob Holdt 的美国往事</strong></p>

<p>作者：Christoph Gunkel</p>

<p>译者：阮一峰</p>

<p>原载：德国《明镜周刊》，2010年2月16日</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt35.jpg" /></p>

<p>1. 回到40年前，Jacob Holdt是一个愤怒的年轻人。他满怀理想主义，反对越南战争，希望改变世界。他的梦想是前往智利，支持萨尔瓦多·阿连德领导的社会主义运动。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt32.jpg" /></p>

<p>2. Jacob Holdt是丹麦人，但是他不喜欢这个国家。因为丹麦表态，支持美国发动越南战争。1970年春天，他动身前往美国，计划从那里过境去智利。那一年，他23岁。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt26.jpg" /></p>

<p>3. 但是光怪陆离的美国社会吸引了他，亲眼目睹的贫穷、绝望和黑暗，令他震惊。他改变了计划，在美国待了下来，打算好好了解这个社会。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt27.jpg" /></p>

<p>4. 他专门去那些其他人不愿意去的地方，访问贫民窟，与黑人、妓女、吸毒者、同性恋、杀人犯住在一起。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt34.jpg" /></p>

<p>5. 他也去访问上流社会，观察富有的银行家和商人家庭。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt33.jpg" /></p>

<p>6. 这样的生活一直持续了5年。1975年，他的两个好朋友在旧金山街头被枪杀，他终于感到了厌倦，决定返回丹麦。这时，他的行李中已经有了15000张照片，这是他用照相机记录下的真实美国。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt37.jpg" /></p>

<p>7. 1977年，他出版了摄影集《美国》（America Pictures），震动了世界，改变了人们心目中的美国形象。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt05.jpg" /></p>

<p>8. 这些照片大多反映底层美国穷人的生活。比如，一个黑人小女孩打开锈迹斑驳的冰箱，寻找食物。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt09.jpg" /></p>

<p>9. 再比如，一个弯着腰的老太太拿着扫帚，打扫自己破旧的小木屋。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt02.jpg" /></p>

<p>10. 它们是贫穷、暴力和绝望的见证。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt29.jpg" /></p>

<p>11. Jacob Holdt并没有钱，他来到美国的时候，兜里只有40美元。他依靠卖血的钱，去买胶卷和食品。他每星期去卖两次血，每次可以换来五美元。在漫游途中，他经常吃猫食。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt36.jpg" /></p>

<p>12. 正是因为过着和他们一样的生活，他才赢得了被摄影的穷人的信任，愿意将真实的情感暴露在他的镜头前。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt30.jpg" /></p>

<p>13. 在这样的环境中待久了，他渐渐地对生活的艰苦和绝望，感到了麻木。1973年，他生活在底特律，那是当时美国谋杀率最高的城市，晚上都能听到窗外有子弹声。当地居民睡觉前，都用冰箱把大门顶住，彻夜开着无线电，告诉窃贼屋里有人。Jacob Holdt虽然很紧张，但还是选择在这里待下去。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt01.jpg" /></p>

<p>14. 五年中，他走过的距离是161265公里，去过美国50个州中的48个，在381个家庭过夜，被捕过6次，被抢劫过4次，有一次子弹擦过耳朵。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt13.jpg" /></p>

<p>15. 他对资本主义社会造成的不平等，感到愤怒。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt03.jpg" /></p>

<p>16. 他写道：“我在这里生活得越久，就越习惯用黑人的眼镜看待白人。”</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt14.jpg" /></p>

<p>17. “我无法隐藏自己日益增加的憎恨。”</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt28.jpg" /></p>

<p>18. 他觉得，很多南方种植园主的生活，不过是奴隶制生活在当代的翻版。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt17.jpg" /></p>

<p>19. 他相信资本家在有意煽动种族主义，人为制造社会的分裂。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt08.jpg" /></p>

<p>20. 因此，他同情那些瘾君子和杀人犯。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt24.jpg" /></p>

<p>21. 同时，他也记录了美国生活中富裕的一面。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt20.jpg" /></p>

<p>22. 这种反差，令社会的不公正更加显著。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt25.jpg" /></p>

<p>23. 他镜头中的中上阶层白人的生活，与底层黑人的生活一样真实和客观。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt16.jpg" /></p>

<p>24. 但是，他很清楚自己的立场在哪里。他写道：“无论何时，每当我有机会去过那种所谓的‘优越生活’时，我经常感到恶心，快速地逃上高速公路离开了。”</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt22.jpg" /></p>

<p>25. Jacob Holdt在1970年来到美国前，觉得那是一个“乏味的白人中产阶级国家”，现在他的看法不一样了。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt04.jpg" /></p>

<p>26. 那是一个贫穷和压迫无处不在的国家。</p>

<p><img src="http://image.beekka.com/blog/2010_03_04/Jacob_Holdt19.jpg" /></p>

<p>27. 他用照片记录了人们的挣扎。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>美国人怎么拔网线——DMCA入门</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/03/dmca.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1348" title="美国人怎么拔网线——DMCA入门" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1348</id>
    
    <published>2010-03-01T08:42:03Z</published>
    <updated>2010-03-01T10:27:01Z</updated>
    
    <summary>1. 上周，有一条微软公司的新闻。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Copyright" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>上周，有一条微软公司的<a href="http://tech.163.com/10/0225/16/60COQH55000915BF.html" target="_blank">新闻</a>。</p>]]>
        <![CDATA[<blockquote><div>

<p>知名黑客网站Cryptome.org，公布了一份微软公司的内部文件。此举惹怒了微软，在施压删除此文件未果后，微软已经与网络供应商交涉，强行关闭了该网站。</p>

</div></blockquote>

<p>我一看就觉得，这是美国版的<a href="http://www.ruanyifeng.com/blog/2008/08/the_legality_of_unplugging_server_cable.html" target="_blank">“拔网线”</a>，顿时感到很气愤。强行将他人的网站下线，原来不仅中国人干，美国人也干。太野蛮了！</p>

<p>但是随后，我就看到了这个事件背后的<a href="http://brainz.org/dmca-takedown-101/" target="_blank">法律知识介绍</a>。微软公司是根据美国<a href="http://en.wikipedia.org/wiki/Digital_Millennium_Copyright_Act" target="_blank">《数字千禧年版权法》</a>（Digital Millennium Copyright ACT，简称DMCA）采取这个行动的。</p>

<p>仔细研读DMCA这部法律以后，我不由感叹，美国人拔网线比中国人文明多了。</p>

<p>2.</p>

<p>DMCA规定，如果某个网站侵犯了你的版权，你可以向它的主机服务商发出通知，要求撤下侵权内容。“DMCA通知”（<a href="http://www.chillingeffects.org/dmca512/notice.cgi?NoticeID=861" target="_blank">示例一</a>，<a href="http://www.plagiarismtoday.com/stock-letters/" target="_blank">示例二</a>）必须包含下列要素，缺一不可，否则就是无效的，收到者可以不予理睬：</p>

<p>　　1）物理签名或电子签名；</p>

<p>　　2）侵权内容的具体位置；</p>

<p>　　3）侵权内容；</p>

<p>　　4）本人的联系方式；</p>

<p>　　5）版权遭到侵犯的声明；</p>

<p>　　6）以上信息皆为事实的声明。</p>

<p>主机公司收到通知后，确认格式正确，并且包含所有上述要素，就要在72小时内采取行动，停止侵权内容的访问（通常是备份后直接删除），然后通知网站的站长。</p>

<p>站长收到删除通知后，如果感到不服，可以向主机公司发出“反通知”（Counter-Notice），要求恢复被删内容的访问。主机公司收到“反通知”后，必须先通知“DMCA通知”发出人，然后在两星期内恢复被删除内容的访问。除非在这期间，版权所有人向法院提起上诉，或者申请到了法院的禁令（injunction）。 </p>

<p>最后，如果“DMCA通知”发错了，发出方必须赔偿全部损失和承担诉讼费用。</p>

<p>可以看到，整个流程很清楚，规定详细严格，侵权方和被侵权方的权利都得到了保障。没有任何一方是高人一等的，一切都按照法律办，绝不会出现申诉无门。要是中国的站长有这种待遇，恐怕早就感动得落泪了。</p>

<p>3.</p>

<p>除了保障站长权益以外，DMCA还极大地免除了第三方公司的<a href="http://www.ruanyifeng.com/blog/2009/12/should_isp_bear_joint_liabilities.html" target="_blank">连带责任</a>，进一步使得站长们有一个宽松的生存空间。</p>

<p>它规定有四类公司不承担侵权责任：</p>

<p>　　1）中介服务提供商（Conduit）：比如宽带公司。虽然侵权内容通过它的网络传送，但是它可以完全免责，因为其本身不是使用的目的。</p>

<p>　　2）缓存服务器（Caching Service）：为了提高网络访问速度，暂时性保存访问内容的服务器，可以完全免除侵权的责任。</p>

<p>　　3）主机公司（Web Host）：前提是满足某些条件，主机公司才能免责，比如事先不知道存在侵权、对侵权内容没有控制能力、不鼓励侵权行为的发生、不直接从侵权内容中盈利、在得到通知后迅速移除侵权内容等等。</p>

<p>　　4）信息定位工具（Information Location Tool）：主要是指搜索引擎和信息分类网站，与主机公司相似，它们必须符合上一条的条件才能免责。</p>

<p>由于这些免责条款，美国的主机公司才能放心经营，不会出于恐慌，随便就把客户的网线拔掉，美国的Web 2.0网站也才会如此兴盛发达。</p>

<p>4.</p>

<p>在美国做网站，DMCA就是对你影响最大的法律。</p>

<p>一方面，我们知道，在美国境内提供或下载盗版音乐和电影，轻则罚款，重则坐牢，这是DMCA的规定。另一方面，我们也知道，美国网站不会因为一个页面存在违规内容，就导致全站不能访问，这也是DMCA的规定。</p>

<p>5.</p>

<p>就算你不在美国做网站，DMCA依然对你有巨大的影响。</p>

<p>因为我们中很多人，使用的都是美国主机公司的服务，这些公司是必须遵守DMCA的，所以你不能在他们的机器上干违反DMCA的事情。</p>

<p>此外，Google是美国公司，它也要遵守DMCA。这意味着，我们可以向Google发出“DMCA通知”，要求它删除某个搜索结果。Google的中国分公司，就有一个专门的中文页面，告诉中国用户应该怎么做，网址是<a href="http://www.google.cn/dmca.html" target="_blank">http://www.google.cn/dmca.html</a>。</p>

<p>为了保护自己的权益，减少损失，我们需要了解DMCA。这就是这篇文章的目的。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>为什么GPL是更好的开源许可证?</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/02/why_gpl_is_a_better_choice.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1347" title="为什么GPL是更好的开源许可证?" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1347</id>
    
    <published>2010-02-27T01:38:29Z</published>
    <updated>2010-02-27T01:38:37Z</updated>
    
    <summary>1. 让我从一件新闻讲起。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Copyright" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>让我从一件新闻讲起。</p>]]>
        <![CDATA[<p>2009年，计算机业界发生了一件大事：甲骨文公司以74亿美元收购SUN公司。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010022701.jpg" /></p>

<p>消息宣布后，有一个人坚决反对这笔交易。他叫<a href="http://en.wikipedia.org/wiki/Michael_Widenius" target="_blank">Michael Widenius</a>，是数据库软件<a href="http://www.mysql.com" target="_blank">MySQL</a>的主要创始人。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010022702.jpg" /></p>

<p>他为什么要反对呢？因为MySQL现在归SUN公司所有，一旦收购成功，就将属于甲骨文公司所有。但是，后者的主要产品是Oracle数据库，与MySQL是竞争关系。所以，甲骨文公司不可能扶持MySQL的后继开发，甚至有可能杀死MySQL。</p>

<p>Michael Widenius不能接受这个事实，他发起万人签名，提交请愿书，要求欧盟委员会否决这项交易。具体情况可以参见<a href="http://helpmysql.org" target="_blank">HelpMysql.org</a>。</p>

<p><img src="http://image.beekka.com/blog/miscellaneous/bg2010022703.jpg" /></p>

<p>2.</p>

<p>去年12月28日，他写了一篇很长的文章“<a href="http://monty-says.blogspot.com/2009/12/help-keep-internet-free.html" target="_blank">Help keep the internet free</a>”，解释为什么反对这项交易。他是这样写的：</p>

<blockquote><div>

<p>"If Oracle were allowed to acquire MySQL, we would be looking at less competition among databases, which will mean higher license and support prices."</p>

<p>“如果甲骨文得到了MySQL，数据库市场的竞争将会减少，最终导致更高的价格和收费。”</p>

</div></blockquote>

<p>你觉得这句话对不对？</p>

<p>我觉得不对。我认为，甲骨文公司杀不死MySQL，数据库市场的竞争不可能减少。<strong>这并非由于甲骨文公司不想这样做，而是因为MySQL是无论如何都不可能被杀死的（假定始终存在市场需求的话）。</strong></p>

<p>3.</p>

<p>为什么MySQL是杀不死的？</p>

<p>答案非常简单。因为它的许可证是GPL。</p>

<p>GPL明确规定，任何源码的衍生产品，如果对外发布，都必须保持同样的许可证。<strong>这就是说，任何人只要发布MySQL的修改版本，他就必须公开源码，并且同意他人可以自由地复制和分发。</strong></p>

<p>现在让我们假想一下：</p>

<p>第一种情况：甲骨文公司决定中止MySQL的开发，会怎么样？</p>

<p>一定会有其他人接手，继续推出MySQL的后续版本，这是GPL许可证允许的，完全合法。虽然不能再叫MySQL这个名字，但是只要代码完全兼容，名字又有什么关系呢。事实上，Michael Widenius自己的公司，现在的产品<a href="http://askmonty.org/wiki/index.php/MariaDB" target="_blank">MariaDB</a>就是基于MySQL的。</p>

<p>第二种情况：甲骨文公司决定，MySQL的后续版本不再开源，或者整体并入Oracle数据库，会怎么样？</p>

<p>答案更简单，不可能发生这种情况。因为根据GPL许可证，只要发布基于原代码的新产品，就一定必须开源。</p>

<p>4.</p>

<p>所以，我实际上觉得，Michael Widenius没有竭力反对的必要。不管甲骨文干什么，MySQL都不可能灭绝。</p>

<p>相反的，真正感到倒霉的人，应该是甲骨文公司才对，因为它花钱买来自己无法控制的财产。<strong>任何的代码，只要置于GPL之下，就不再受作者或所有者控制了，想杀也杀不死了。</strong></p>

<p>5.</p>

<p>如果一个程序员想将自己的代码开源，他有许多种选择，大致可以分成三类：</p>

<p>　　1. 选择GPL许可证，要求衍生代码必须开源。</p>

<p>　　2. 将代码放入“公共领域”（public domain），彻底放弃版权。</p>

<p>　　3. 选择更宽松的许可证，比如BSD和Apache许可证，不要求衍生代码开源。</p>

<p><strong>许多人认为，选择后两种做法比选择GPL更值得赞扬，因为更加大公无私。但是，这样的看法是错误的，实际上GPL要好于后两种选择。</strong></p>

<p>让我们再来假想一下，如果MySQL的源码处于公共领域，或者BSD许可证之下，那会怎样？</p>

<p>那样的话，许多站长恐怕都会感到大难临头了。他们不得不做出选择，将来到底是升级到第三方小公司推出的、质量没有保证、支持力量薄弱、互相不兼容的基于MySQL 5.x版本的各种衍生数据库，还是升级到甲骨文公司推出的、与Oracle兼容的、号称具备各种新功能和最佳性能、并且广告满天飞的MySQL 6.0版本。</p>

<p>在BSD许可证或者公共领域代码的情况下，甲骨文公司可以从容地将MySQL 6.0变为闭源产品，推出你只有花钱才能买到的新特性和后继版本，并且只要你复制给他人使用，就要起诉你。使用开源软件的用户，将因此变为依赖甲骨文公司的用户。只有这种情况发生，才真正有必要，竭力反对甲骨文收购SUN公司。</p>

<p>当程序员放弃代码的版权，或者选择BSD许可证，他可能认为自己做出了世界上最无私的行为。很大程度上，事实确实如此。但是，我们要知道，这个世界是一个商业利益占主导的世界。一旦发生像甲骨文拥有MySQL这一类的事情，你的代码的价值将大大削弱，大公司先是免费利用它们，然后再设法推出取代它们的私有产品。你以为自己奉献了爱心，但是实质上变成了为大公司无偿打工。</p>

<p><strong>从这个角度看，GPL是更好的开源许可证。它保证了自由始终是自由，既无法被剥夺，也不是一种圈套或陷阱。</strong></p>

<p>6.</p>

<p>有的朋友读到这里，可能会提出疑问。如果GPL许可证真的这么好，那么为什么GNU基金会还推出了<a href="http://www.gnu.org/licenses/lgpl-2.1.html" target="_blank">LGPL许可证</a>？</p>

<p>所谓LGPL许可证，全称是Lesser General Public License，直译就是“限制更少的GPL许可证”，1991年时与GPL（第二版）同时发布。它近似于BSD许可证，允许将代码用于闭源产品。</p>

<p>这就产生了一个很有趣的问题。为什么像Richard Stallman这种坚持自由丝毫不可侵犯的人，会同意将自己的代码用于闭源产品？</p>

<p>说起来，这其实是他的策略，主要与GNU C library有关。1991年的时候，市场上有很多C语言库可以选择。如果GNU的C库是GPL许可证，那么很多私有软件不会选择它，因为一旦选择了它，就意味产品本身一定要开源。所以为了保证开源软件得到使用和推广，并且闭源软件中有开源的成分，总比一点没有好，所以才诞生了LGPL许可证。</p>

<p><a href="http://www.gnu.org/licenses/why-not-lgpl.html" target="_blank">Richard Stallman</a>说得很清楚：</p>

<blockquote><div>

<p>"After all, there are plenty of other C libraries; using the GPL for ours would have driven proprietary software developers to use another—no problem for them, only for us."</p>

<p>“毕竟，市场上的C库有的是。GPL许可证将迫使私有软件去使用他人的库，这不会给他们带来困扰，只会给我们带来困扰。”</p>

</div></blockquote>

<p>所以，策略是这样的：<strong>整体软件，或者没有替代品的代码库，一定要使用GPL许可证；有替代品的代码库，可以使用限制较少的开源许可证，但是在取到足够市场份额之后，也应该转为GPL许可证。</strong>这就是为什么javascript的代码库，大多数都是类似BSD的许可证，而不是GPL许可证的原因，因为可替代自己的竞争者实在太多了。</p>

<p>总之，如果你想把自己的软件开源，只要不属于上面这种例外情况，GPL就是更好的选择。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>“熔模铸造”图解</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/02/investment_casting.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1346" title="“熔模铸造”图解" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1346</id>
    
    <published>2010-02-21T19:14:45Z</published>
    <updated>2010-02-21T19:35:29Z</updated>
    
    <summary>英国摄影师Alex Hofford访问了一家宁波的乡镇企业。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="Photography" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p><span class="firstchar">英</span>国摄影师<a href="http://www.alexhoffordphotography.com" target="_blank">Alex Hofford</a>访问了一家宁波的乡镇企业。</p>]]>
        <![CDATA[<p>在那里，他拍摄了<a href="http://www.alexhoffordphotography.com/node/2300" target="_blank">“熔模铸造”</a>（investment casting）的全过程，非常有趣。</p>

<p>从古代青铜器算起，这种铸造工艺已经有几千年的历史了，并且直到今天还在广泛使用。看完下面的这组图片，你就会明白它到底是怎么做的。</p>

<p>此外，你还会从中看到，现实中的中国制造业是什么样子的，以及其中反映出来的一些社会问题。我强烈推荐这组作品。</p>

<p>它属于Alex Hofford的“中国工厂”系列照片之一。这个系列还包括<a href="http://www.alexhoffordphotography.com/node/2289" target="_blank">游戏机工厂</a>、<a href="http://www.alexhoffordphotography.com/node/2290" target="_blank">遥控器工厂</a>、<a href="http://www.alexhoffordphotography.com/node/2291" target="_blank">塑料工厂</a>、<a href="http://www.alexhoffordphotography.com/node/2293" target="_blank">手机充电器工厂</a>、<a href="http://www.alexhoffordphotography.com/node/2295" target="_blank">笔记本电源工厂</a>、<a href="http://www.alexhoffordphotography.com/node/2296" target="_blank">变压器工厂</a>和<a href="http://www.alexhoffordphotography.com/node/2297" target="_blank">五金工厂</a>。</p>

<p>下面的图片比较多，如果无法显示，多刷新几次即可。</p>

<p>================================</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-01.jpg" /></p>

<p>1. 工人在搅拌蜡原料。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-02.jpg" /></p>

<p>2. 融化的蜡注入金属模具。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-03.jpg" /></p>

<p>3. 等到初步凝固后，就可以从模具中取出蜡模型。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-04.jpg" /></p>

<p>4. 蜡模型放入冷水中，进一步冷却固化。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-05.jpg" /></p>

<p>5. 成型的蜡模型移入储藏室。它们是金属零件的原型，那些零件可以用于制造汽车、火车、飞机、机械设备、电站设备等。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-06.jpg" /></p>

<p>6. 蜡模型都放在一个个竹筐里。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-07.jpg" /></p>

<p>7. 下一步是将同样的模型都合并在一起，形成一个模型树。通过加热，把它们黏合。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-08.jpg" /></p>

<p>8. 排列好的模型树，将被送入下一道工序。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-09.jpg" /></p>

<p>9. 这一步是形成陶模（ceramic mold）。简单说，就是反复执行三个步骤：涂料、撒砂和硬化。首先，模型树被浸入硅酸乙酯或者硅酸钠的复合溶液。溶液的气味很像氨水，但是现场没有一个工人戴着呼吸系统保护装置。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-10.jpg" /></p>

<p>10. 完成涂料的模型树，再被手工洒上二氧化硅晶体或者锆石晶体。这个步骤会反复进行多次，然后模型树会被悬挂，等待风干硬化。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-11.jpg" /></p>

<p>11. 工人是新疆来的临时工。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-12.jpg" /></p>

<p>12. 涂料和撒砂需要一直做，直到陶模的厚度达到一厘米左右。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-13.jpg" /></p>

<p>13. 粉尘太大，我的眼睛流泪了。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-14.jpg" /></p>

<p>14. 完成之后，陶模就被放在一边，由夜班工人处理。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-15.jpg" /></p>

<p>15. 夜班的任务是熔铸。之所以要在夜里进行，是因为宁波市规定，晚上11点以后电费半价。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-16.jpg" /></p>

<p>16. 铸造车间的熔炉使用煤炭作为燃料。陶模被推进去，里面的蜡芯开始融化，二氧化硅晶体互相结合，形成了一个坚硬抗热的空心陶瓷部件。这一步叫做烧芯。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-17.jpg" /></p>

<p>17. 工人用推车，将烧制好的陶模取出熔炉。他既没有戴手套，也没有戴护目镜。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-18.jpg" /></p>

<p>18. 烧得通红的陶模，被直接放置在砂石上。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-19.jpg" /></p>

<p>19. 工人用铁杆，将陶模排成一串。他们穿的完全是普通鞋子，没有穿那种厚重的安全靴。每当铁杆碰到陶模，就会有余火飞溅起来。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-20.jpg" /></p>

<p>20. 工人用铁耙子，将砂石围在陶模四周，只露出口上的部分。陶模被牢固地固定了。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-21.jpg" /></p>

<p>21. 同时，其他工人点燃了电熔炉。虽然，将这道工序留到夜晚进行，是为了省电费，但是另一个好处是，拍摄出来的照片很壮观。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-22.jpg" /></p>

<p>22. 废钢加入电熔炉融化。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-23.jpg" /></p>

<p>23. 融化后的钢水被倒入一个可以移动的坩埚。两个工人用长杆子架住坩埚。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-24.jpg" /></p>

<p>24. 这一步非常危险，火花四溅。但是工人们没有戴手套，也没有戴护目镜。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-25.jpg" /></p>

<p>25. 钢水被倒出坩埚，倒入一个个陶模之中。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-26.jpg" /></p>

<p>26. 钢水发着白光，温度达到千度以上。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-27.jpg" /></p>

<p>27. 工人全神贯注，非常小心，防止钢水从陶模上溢出来，或者倒错了地方。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-28.jpg" /></p>

<p>28. 如果钢水倒得不好，没有正好填满陶模，或者在倒的过程中形成气泡，整个零件就成了次品和废品。工厂的利润和成本就要受到影响。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-29.jpg" /></p>

<p>29. 现场的烟雾和气味非常强烈，但是没有人戴呼吸保护装置。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-30.jpg" /></p>

<p>30. 经理告诉我，厂方以前给工人发过护目镜、手套、靴子、面具等劳防设备，但是工人不愿意使用。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-31.jpg" /></p>

<p>31. 赤手空拳地在熔炉旁倒钢水，无疑让现场弥漫着一股英雄好汉气概。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-32.jpg" /></p>

<p>32. 经理说，厂方曾经规定，不使用劳防用品，每次罚款5元。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-33.jpg" /></p>

<p>33. 但是不久以后，因为罚款会减少工人的收入，所以工人纷纷跳槽，到其他没有劳防用品也不罚款的厂里干活。所以，厂方最后只能放弃罚款制度。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-34.jpg" /></p>

<p>34. 这就是奇怪的地方。不仅厂方不重视生产安全，就连工人也不重视对自己的保护。在西方国家，工人的自我保护意识已经强化到有点过分的程度，而在中国，这种意识则是根本不存在。提高生产安全的唯一方法，只能是通过更严厉的法律，以更强有力的力度，迫使厂方去实施。对工厂随时进行抽查，就是一个好方法。但是，执法部门缺乏人手，以及政府中的腐败，都会阻碍这项工作。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-35.jpg" /></p>

<p>35. 中国是一个大国，保护工人和保护环境，都遇到了相似的问题。那就是法律制定出来了，却得不到实施。要想解决这个问题，真是谈何容易。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-36.jpg" /></p>

<p>36. 等到冷却后，浇铸好的陶模就被巨大的火钳移走了。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-37.jpg" /></p>

<p>37. 它们被放在推车上。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-38.jpg" /></p>

<p>38. 这一次，工人戴着手套。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-39.jpg" /></p>

<p>39. 陶模和里面的零件，被拉到楼外。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-40.jpg" /></p>

<p>40. 它们被倒在地上冷却，等着日班工人移去陶瓷外壳。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-41.jpg" /></p>

<p>41. 第二天早上，工厂烟囱冒出了煤烟。具有讽刺意味的是，我是在联合国哥本哈根气候会议闭幕的当天，拍摄这张照片的。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-42.jpg" /></p>

<p>42. 燃煤的锅炉整个白天都要烧着，这是为了保证“烧芯”步骤的进行。温室气体就是这样被排放的。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-43.jpg" /></p>

<p>43. 工人用喷灯除去零件上面蜡模的残片，这一步必须重复执行。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-44.jpg" /></p>

<p>44. 这是一项非常艰苦的工作。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-45.jpg" /></p>

<p>45. 工作条件很恶劣。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-46.jpg" /></p>

<p>46. 虽然看上去，现场一片混乱，但是这项工作本身完全是有条不紊地在进行。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-47.jpg" /></p>

<p>47. 其他工人从零件上去除二氧化硅的残渣。有时会用到榔头。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-48.jpg" /></p>

<p>48. 这个工人的手套上都是洞。工作条件无疑是很差的。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-49.jpg" /></p>

<p>49. 钢铁零件会进一步用机器清洁表面，把浇铸过程的痕迹完全去掉。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-50.jpg" /></p>

<p>50. 工人用强力机器对产品做进一步光滑处理。这个工作场景简直就像中世纪的手工作坊。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-51.jpg" /></p>

<p>51. 午饭时间到了。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-52.jpg" /></p>

<p>52. 饭菜中没有肉食，只是米饭和蔬菜。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-53.jpg" /></p>

<p>53. 午饭后，工人将零件放入喷砂机，做最后的抛光。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-54.jpg" /></p>

<p>54. 拍摄这张照片的时候，喷砂机正好开着，许多小块的碎石从里面高速弹出，像连珠炮一样打在我身上。奇怪的是，这个工人戴着面具，保护的是呼吸系统，他却没有戴护目镜。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-55.jpg" /></p>

<p>55. 喷砂完成后，零件成品就从机器里落在手推车上。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-56.jpg" /></p>

<p>56. 它们会被用于重型工业的机械上。</p>

<p><img src="http://image.beekka.com/blog/2010_02_21/FURNACE-57.jpg" /></p>

<p>57. 用“熔模铸造法”制造钢铁零件的整个过程，到此就全部完成了。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>再谈Android的许可证（续）</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/02/revisiting_android_licenses_continued.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1345" title="再谈Android的许可证（续）" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1345</id>
    
    <published>2010-02-20T09:15:03Z</published>
    <updated>2010-02-20T09:31:04Z</updated>
    
    <summary>写前一篇网志时，我参考了Ryan Paul的文章。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="IT" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>写<a href="http://www.ruanyifeng.com/blog/2010/02/revisiting_android_licenses.html" target="_blank">前一篇网志</a>时，我参考了<a href="http://arstechnica.com/author/ryan-paul/" target="_blank">Ryan Paul</a>的文章。</p>]]>
        <![CDATA[<p>他是资深Linux程序员和评论者。他对Android许可证的评论，是我见到的最准确、最通俗易懂的介绍。当时，我翻译了一些片段，打算在自己的文章中引用，但是后来没用上。我觉得不甘心，于是今天就把全文译出，贴在下面，希望让更多的朋友看到。</p>

<p>如果你对GPL、ASL、BSD这一类的许可证名字，只有一些模模糊糊的概念，搞不清楚它们之间的区别。那么，我强烈推荐你阅读此文，读完后，你就会对开源软件的许可证，有一个基本的认识了。</p>

<p>值得指出的是，此文写于2007年，当时Google刚刚宣布Android项目，代码还没有完成，工程样机更是没有，外界只能凭几句文字叙述，猜测这个系统的样子。但是，Ryan Paul就是有这个本领，只看许可证选择，就判断出Android的开发模式。事实证明，他的判断完全正确，除了一点：他没有料到，Google会修改Linux内核，故意造成两者不兼容。</p>

<p><img alt="bg2010022001.jpg" src="http://www.ruanyifeng.com/blog/upload/2010/02/bg2010022001.jpg" /></p>

<p>（图片说明：自由软件基金会的标志）</p>

<p><img alt="bg2010022002.gif" src="http://www.ruanyifeng.com/blog/upload/2010/02/bg2010022002.gif" /></p>

<p>（图片说明：Apache基金会的标志）</p>

<p><img alt="bg2010022003.jpg" src="http://www.ruanyifeng.com/blog/upload/2010/02/bg2010022003.jpg" /></p>

<p>（图片说明：FreeBSD基金会的标志）</p>

<p>=================================</p>

<p><strong>Why Google chose the Apache Software License over GPLv2 for Android</strong></p>

<p><strong>为什么Android不是GPL许可证？</strong></p>

<p>作者：Ryan Paul </p>

<p>译者：阮一峰</p>

<p>发表日期：2007年11月6日</p>

<p>原文网址：<a href="http://arstechnica.com/old/content/2007/11/why-google-chose-the-apache-software-license-over-gplv2.ars" target="_blank">http://arstechnica.com/old/content/2007/11/why-google-chose-the-apache-software-license-over-gplv2.ars</a> </p>

<p><br />
Google finally entered the mobile software market by turning the 2005 acquisition of Android into the Open Handset Alliance. </p>

<p>Google终于进入了手机市场。2005年，它收购了Android。在此基础上，现在，它组建了“开放手机联盟”（Open Handset Alliance）。</p>

<p>Google hopes to promote third-party mobile software development and foster a broad developer community on top of Android's Linux-based mobile platform. </p>

<p>Android是一种Linux内核的手机操作系统。Google希望，这会吸引来第三方软件开发者，建立起一个大规模的开发者社区。</p>

<p>In the wake of Google's announcement, one topic that has been discussed by some members of the open-source software community is the significance of Google's licensing choice.</p>

<p>但是，此事公布后不久，开源软件社区就议论纷纷，大家在讨论Google为Android选择的许可证。</p>

<p>Although the underlying Linux kernel is licensed under version 2 of the Free Software Foundation's General Public License (GPLv2), much of the user-space software infrastructure that will make up the Open Handset Alliance's platform will be distributed under version 2 of the Apache Software License (ASL). </p>

<p>Linux内核的许可证，是自由软件基金会的GPL许可证第二版。但是，“开放手机联盟”的主要代码，却是Apache许可证（ASL）第二版。</p>

<p>This raises certain questions about Google's goals in the mobile space and the nature of the third-party application ecosystem that will emerge around the platform.</p>

<p>这使得有人怀疑Google的动机。它的目标到底是什么？Android平台上，到底会有怎样的第三方软件？</p>

<p>ASL, which is widely used in the open-source software community and has been approved by the Open Source Initiative, is a permissive license that is conducive to commercial development and proprietary redistribution. Code that is distributed under the ASL and other permissive licenses can be integrated into closed-source proprietary products and redistributed under a broad variety of other terms.</p>

<p>ASL许可证被开源软件广泛使用，并且得到了“开放源码促进会”（Open Source Initiative）的认可。它是一种不设限的许可证（permissive license），允许软件的商业性开发和垄断式发布。以ASL发布的代码，可以被合并入闭源的专有软件（proprietary product），并且在各种各样的限制性条件下发布。</p>

<p> Unlike permissive open-source licenses, "copyleft" licenses (such as the GPL) generally impose restrictions on redistribution of code in order to ensure that modifications and derivatives are kept open and distributed under similar terms.</p>

<p>与ASL不同，GPL则是一种Copyleft许可证。它对代码的发布做出了限制，规定所有对源码的修改和衍生，都必须公开，并且以相似的许可证发布。</p>

<p>Permissive licenses like the ASL and BSD license are preferred by many companies because such licenses make it possible to use open-source software code without having to turn proprietary enhancements back over to the open source software community. These licenses encourage commercial adoption of open-source software because they make it possible for companies to profit from investing in enhancements made to existing open-source software solutions. That potential for proprietary investment on top of an open stack is most likely what inspired Google to adopt the Apache Software License for its mobile platform. Availability of Android under the ASL will ensure that a broader number of companies will be able to adopt the platform and build on top of it without having to expose the inner workings of proprietary technologies that give them a competitive advantage.</p>

<p>许多软件公司更愿意采用不设限的许可证（比如ASL和BSD），因为这使得它们既可以使用开源软件，又不用向开源社区公开对软件所做的修改。所以，ASL和BSD鼓励了开源软件的商业性使用，使得软件公司愿意对开源软件投资，因为这些公司可以从中获利。这种在开源基础上吸引商业投资的潜力，很可能是Google为自己的手机平台选择ASL许可证的最大原因。将Android置于ASL之下，可以确保许多商业性公司会接受这个平台，并且在它上面使用自己的专有技术。</p>

<p>Although using a permissive license like ASL is the best way to build support for the Android platform, critics argue that Google has sacrificed an opportunity to encourage greater openness in the broader mobile software space. If Android was distributed under the GPLv2, companies building on top of the platform would have to share their enhancements, which could theoretically lead to widespread sharing of code and a more rapid acceleration of mobile software development.</p>

<p>虽然ASL确实是保证Android获得支持的最好方法，但是批评者认为，Google这样做的代价，是丧失了创造一个更开放的手机软件平台的机会。如果Android的许可证是GPLv2，那么在它上面做开发的那些公司，将不得不公开对系统所做的改进，理论上就会导致代码被更广泛地分享，因而手机软件的开发也会更快速地进步。</p>

<p>The counterargument is that distributing Android under a copyleft license could potentially limit the evolution of the mobile software ecosystem by discouraging commercial development on top of the platform. Proprietary mobile software development companies that integrate Android into their technologies would have to dramatically change their business models if they aren't given the ability to keep their enhancements proprietary.</p>

<p>另一些人不同意这种看法。他们认为如果Android选择copyleft许可证，会使商业性公司不愿意介入开发，从而使系统本身的发展困难重重。如果那些公司没有办法保护自己的专有技术不公开，那么即使它们愿意采用Android平台，也必须急剧地改变经营模式，而这是有风险的。</p>

<p>It is important to note that the ASL is only being applied to the assortment of user-space platform components that make up Android. The kernel itself is still licensed under the GPLv2, and third-party software that runs on top of the platform can be distributed under pretty much any license, including commercial and copyleft licenses. </p>

<p>有一点是不能忽视的，那就是只有Android的userspace部分是ASL许可证。系统的内核依然是GPLv2许可证。而运行在系统上方的第三方软件，可以用任何许可证发布，包括商业性许可证和copyleft许可证。</p>

<p>It is also important to note that, although the ASL was not compatible with previous versions of the GPL, it is entirely compatible with the GPLv3. This means that code distributed under the ASL can be incorporated into GPLv3 software. As a result, developers can choose to distribute Android derivatives under the GPLv3 in order to ensure that further development on top of their own enhancements remains open.</p>

<p>还有一点也很重要，那就是虽然ASL与GPLv2不兼容，但是它与GPLv3完全兼容。这意味着，在ASL下发布的代码，可以被用于GPLv3许可证的软件。因此，程序员可以选择将Android程序在GPLv3下发布，这样就能保证他们作品的进一步开发，将始终是开源的。 </p>

<p>Ultimately, the decision to use the ASL is sensible. Although it would be beneficial to all if Google were to use Android licensing to further open the market, that likely would have stifled adoption of the platform by handset makers. </p>

<p>最终来说，Google选择ASL是情有可原的。虽然Android如果在GPL许可下发布，会使所有人得利，但那样也会阻碍这个系统被手机厂商采用。</p>

<p>When it comes right down to it, the handset makers are the developers who are most significantly affected by the Android license, since they are the primary distributors of mobile phone platforms. The ASL will allow individual handset makers to develop proprietary customizations for the platform as needed to accommodate the unique technologies in their individual products. </p>

<p>如果单就手机厂商而言，他们才是受Android许可证影响最大的开发者，因为他们是手机平台主要的发布渠道。ASL允许手机厂商对平台进行改造，使得Android变得好像他们的独家产品一样。</p>

<p>Third-party software developers who are building applications on top of Android will largely be unaffected by Google's licensing decision since the individual applications can be distributed under their own licenses. </p>

<p>而第三方的软件开发者，总体上不受Google许可证选择的影响，因为他们可以为自己的软件选择任何的许可证。</p>

<p>Another point worth noting is that Linux-based mobile platforms created by other mobile technology coalitions like the LiMo Foundation also facilitate mixing proprietary and open software.</p>

<p>还有一个值得注意的地方是，其他Linux核心的手机平台，比如LiMo，也是闭源软件和开源软件的混合。</p>

<p>As more details emerge and more source code becomes available, it's likely that third-party developers and handset makers will eagerly flock to Android in order to benefit from the ecosystem that Google is creating.</p>

<p>随着更多的细节和更多的源码被公布，手机厂商和第三方开发者，很可能会热切地投入Android的怀抱，享受Google创造的这个平台。</p>

<p>（完）</p>]]>
    </content>
</entry>
<entry>
    <title>再谈Android的许可证</title>
    <link rel="alternate" type="text/html" href="http://www.ruanyifeng.com/blog/2010/02/revisiting_android_licenses.html" />
    <link rel="service.edit" type="application/atom+xml" href="http://www.ruanyifeng.com/cgi-bin/mtype/mt-atom.cgi/weblog/blog_id=1/entry_id=1344" title="再谈Android的许可证" />
    <id>tag:www.ruanyifeng.com,2010:/blog//1.1344</id>
    
    <published>2010-02-18T17:34:55Z</published>
    <updated>2010-02-18T18:36:49Z</updated>
    
    <summary>1. 两周前，我写了一篇《Android，开源还是封闭？》。...</summary>
    <author>
        <name>阮一峰</name>
        <uri>http://www.ruanyifeng.com</uri>
    </author>
            <category term="IT" />
    
    <content type="html" xml:lang="ja" xml:base="http://www.ruanyifeng.com/blog/">
        <![CDATA[<p>1.</p>

<p>两周前，我写了一篇<a href="http://www.ruanyifeng.com/blog/2010/02/open_android_or_not.html" target="_blank">《Android，开源还是封闭？》</a>。</p>]]>
        <![CDATA[<p>其中有一些内容，我今天要做修正，还想谈一些别的感想。</p>

<p>2.</p>

<p>在谈具体的修正之前，我先来说说，那篇文章的一些情况。</p>

<p>那天白天，我在外面办事，从手机上读到Linux内核撤下所有Android代码的消息，感到很震惊。晚上回家后，仔细读完了相关报道，就一口气写了一些感想。写完已经将近半夜12点。我改了几个错别字，直接把文章贴上网，然后就上床睡觉了。当时也没多想，不觉得它和我的其他文章有何不同。</p>

<p>但是，第二天起床以后，我发现事情变得复杂了。那篇文章被转贴到许多技术论坛和网络媒体，产生了很多回复和议论。要是早知道它会被那么多专业开发人员读到，我一定会写得更谨慎。</p>

<p>更令我意外的是，超过半数的读者，都在批评那篇文章。尤其是一些认识很久的朋友，也对它持负面看法。这令我反思，到底哪里写错了？</p>

<p>节假日期间，我也在思考这个问题。下面就是一些结果。</p>

<p>3.</p>

<p>首先，我必须老老实实承认，那篇文章确实有重大错误。</p>

<p>别的不说，单单文章的标题就是错的。我用《Android，开源还是封闭？》这样的标题，暗示Android表面是开源系统，实质上是封闭系统。我的这种说法是错的。</p>

<p>理由如下：</p>

<p>　　* Android使用的是Apache许可证，这是一个开源许可证。</p>

<p>　　* 它的所有源码都公布在网上，你可以用来干任何事情。</p>

<p>　　* 对于不喜欢这个许可证的人，可以完全合法地把自己的Android程序，改为GPL许可证。</p>

<p>无论从表面还是从实质上看，Android都是一个开放的系统，不是封闭系统。所以，我指责Android是封闭系统，这是不正确的。</p>

<p>由于我把不正确的论断作为那篇文章的基本论据，直接导致结论不可信。因此，文章遭到批评和鄙视，确实也是理所应当。</p>

<p>4.</p>

<p>不过，我的文章写错了，并不代表Google没有做错。你可以这样想，如果Google的所作所为都是无可指责的话，那么为什么Linux内核开发小组会撤下它的代码呢？</p>

<p>这就是我今天想说的第二件事：Android的许可证选择是有问题的。它的问题不在于系统是不是开放，而在于它造成了Linux的分裂。</p>

<p>为什么Android分裂了Linux？</p>

<p>因为Google修改了Linux内核，使得Android与内核不兼容。所有Android上的开源驱动，不经过修改，都无法用于内核，而Google又不愿意修改。因此，内核开发小组只好把它撤下来，因为留着也没用。</p>

<p>这就是Google最让人不满的地方。为了吸引外部程序员，它故意选择Linux内核，而不是自己开发内核。但是开发出来的东西，只能用于Google的产品，不能用于内核。这种分裂行为的后果，就是把Linux社区削弱了。</p>

<p>为了便于思考，让我来举一个类比。</p>

<p>很久以前，有一帮很穷的程序员，在森林里面打游击、闹革命。由于反革命力量实在太强大了，游击队屡战屡败，士气低落。这时，有一个大佬宣布要加入游击队，大家都很振奋，有了大佬的支持，革命有希望成功了。可是没想到，大佬来了以后，宣称他对革命的定义跟别人不一样，要求别人跟着他闹革命。双方谈判不成，大佬就带走了一部分人，自己单干了。所以，大佬加入革命以后，革命势力反而变得更弱小了，还不如不加入呢。</p>

<p>同样地，Android系统越发达，受益的只是Google和手机厂商，而不是Linux社区。后者因为程序员和厂商的流失，力量还会变得更加积弱。事实上，Android的推出，已经使得<a href="http://maemo.org/" target="_blank">Maemo</a>、<a href="http://www.limofoundation.org/" target="_blank">LiMo</a>、以及其他基于Linux的手机系统，生存处境越发艰难。</p>

<p>可惜我没有早点认识到这些。如果我从这个角度评价Android，那篇文章的错误就会少一些，也不会遭到那么多反对意见了。</p>

<p>5.</p>

<p>在所有的批评中，有些不是针对那篇文章的具体内容，而是针对我个人的。</p>

<p>举几个典型的例子：</p>

<p>　　* 他开始乱喷了！</p>

<p>　　* 这个知道分子，又在卖弄自己不懂的东西了。</p>

<p>　　* 此人大言不惭，就是一个不靠谱的妄人。</p>

<p>虽然我觉得，这些评价对我不太公平，但是我还是要谢谢这些朋友的指教。我愿意虚心汲取教训，以后写文章一定更加严谨，减少错误。</p>

<p>6.</p>

<p>不过，我也想借这个机会澄清一些误解。</p>

<p>我不知道，这些朋友是怎么看待这个网志的。我想问问他们，你们以为我为什么要写这个网志？为了出名？为了赚钱？为了满足虚荣心，显示本人无所不知，很能写？……</p>

<p>不，这些都不是理由。事实上，从任何利益的角度考虑，写网志都是很不值得的事情。一方面，这里的任何一篇文章，写作时间通常都需要2~6小时，而我写了1000多篇，付出的时间和精力难以想像。另一方面，网站唯一的直接收入就是Google广告，但是只能刚好弥补主机和域名的费用，一点都没有多余。如果想出名和赚钱的话，我想一定有比这更轻松的方法吧。至于虚荣心，写了这么久，每天访问量也只有几千IP，我想聪明一点早该知难而退了。</p>

<p>我之所以还在写，是因为我把这个网志当作自己的学习笔记。不断地积累新知识，思考、总结、记录下来，令我感到一种学习的乐趣。所以，我希望大家知道一点，我的网志首先是一个私人空间，不是公共媒体。有些人的网志是为了向公众发言，我的不是。</p>

<p>正是因为我把这里看作一个私人笔记本，所以有时候写作比较随便，经常写一些自己刚刚接触到、没有全面认识的东西。因为笔记里记录的，总是你需要学习的东西，而不是你已经学会的东西，对不对？另一方面，也是因为这是笔记，所以有时候我怕麻烦，没有给出充分的论证和足够的核对，就匆忙写下自己的看法。但是，这不代表我不严谨和粗疏，我只是认为，个人笔记和公开发表的作品不一样。如果是公开发表的论文，每句话都必须有依据，经得起考验，而如果是笔记的话，那就不一定那么严格了。这也是为什么我公开发表的文章，远远少于网志文章的原因之一。</p>

<p>当然，我不为自己的错误辩解，可以告诉大家，我比任何人都更严厉地对待自己的错误。我时刻愿意听取他人的批评，修正自己的错误，因为这是对我有利的。我只是希望大家知道，这个网志的内容本来就不可避免地包含着错误，所以请不要因为文章中有错误，就对我这个人下评判。借用一句张五常的话，“要斩，就斩我的文章，不要斩我的人”。</p>

<p>7.</p>

<p>现在再回到Android的话题，我还有最后一点感想要说。</p>

<p>请先看一些网友对此次Linux内核撤下Android代码事件的评论：</p>

<p>　　* Google是上市公司，它当然选择对自己最有利的做法。</p>

<p>　　* Linux内核是Google能找到的最便宜的内核，为什么不用？</p>

<p>　　* Google又没违反License，还有什么可说的。</p>

<p>　　* 为什么Android的代码非要回馈给Linux呢？奇怪的想法。</p>

<p>这些意见似乎认为Google的行为符合合约和“自利原则”，因此无可指责。当然，我也同意，从这个角度看，Google没有做错。但是，如果换个角度，让我们从“利他原则”的角度思考，会不会得到不一样的结论呢？比如，Google这样做是不是符合开源运动的理想？有没有伤害到开源社区的利益？……</p>

<p>不过，我不打算在这个问题上深究下去。在一个不正义的第三世界人口大国，讨论到底是“利己”重要，还是“利他”重要，实在是一个太艰难的问题。与其想要找到答案，还不如对自身命运叹息。</p>

<p>令我真正愤怒的，是下面这样的评论：</p>

<p>　　* GPL这个病毒又作恶了！</p>

<p>　　* 早觉得Linux像宗教。有时候在想，那个RMS驾崩了怎么办呢？五六十岁的人了，得个病死了很正常。</p>

<p>　　* 我看RMS没那么容易挂，一般教主都是长命百岁的老妖怪。</p>

<p>我早就感到了，在中国的软件业中，有一种针对自由软件运动的仇恨。不是一般的反感，而是那种咬牙切齿、死而后快的真正仇恨。我想问问这些人，你们的仇恨是从哪里来的？</p>

<p>自由软件运动和它的创始人Richard Stallman，在没有任何索取的前提下，向全世界无偿奉献出了高质量的软件，全人类都受益于他们的代码，难道这样的人应该被仇恨和诅咒吗？你们的良心到哪里去了？</p>

<p>自由软件运动的理想，是让地球上每一个人都能使用高质量的软件，决不让软件成为阻挡人类自由的障碍。难道这样的理想不值得赞美和追随吗？你们自己没有这种理想，难道还想消灭别人的理想？难道你们非要把软件做成他人的监狱，才感到心满意足？</p>

<p>说到底，不过是因为自由软件可以免费获得，阻碍了这些人的发财梦，所以他们才会恨得这样咬牙切齿。是的，地球上就是有这种人类，谁妨碍了他发财，他就想除掉你。只要自身的利益得到保障，他人的死活才无所谓呢。</p>

<p>正是由于这种自私的人的存在，才需要我们更坚定地支持自由软件。许多人觉得Richard Stallman顽固得可笑，任何非GPL许可证的软件一概拒绝，有必要吗？但是你要知道，如果不是因为他这样坚守原则，自由软件运动绝对坚持不到今天。因为这个世界到处都是陷阱和烂泥，还有时刻准备着的阴谋家，所以你不能做一点妥协。你退让了一步，整个阵地就全没了。</p>

<p>8.</p>

<p>回想十年前，Windows 98正是如日中天，Windows XP即将上市，IE的市场份额超过90%，微软公司多么得不可一世，没有人相信它会被击败。大家觉得，只要跟着微软公司走，一定不会错。那时的Linux，还只是很不成熟的黑客玩具，不要说桌面了，就连服务器市场的份额也很小。那时，要是有人说，Linux一定会胜过Windows，大家都会觉得这是痴人说梦。</p>

<p>但是，十年过去了，发生了什么？微软公司依然强大，但已不是不可战胜了；Linux已经跻身主流操作系统，装有它的笔记本电脑在商场里很容易买到；以Firefox为代表的开源浏览器，占据了越来越多的市场份额，超过IE的时刻已经近在眼前了。这就是自由软件的力量，不管你愿意不愿意，就像那副著名油画的名字<a href="http://images.google.cn/images?hl=zh-CN&q=%E8%87%AA%E7%94%B1%E5%BC%95%E5%AF%BC%E4%BA%BA%E6%B0%91&sourceid=navclient-ff&rlz=1B3GGGL_zh-CNCN213CN213&um=1&ie=UTF-8&sa=N&tab=wi" target="_blank">《自由引导人民》</a>，就是这样。</p>

<p>你敢想像，再过十年会发生什么情况吗？如果一边是封闭软件，另一边是开源软件，你赌哪一边？相信我，跟随自由的东西，绝对不会错。历史已经证明，并将继续证明这一点。</p>

<p>所以，我还是要重复前一篇文章中的话：如果Android继续走这种分裂Linux的道路，它不会成功的，不要说超过iPhone，再过二三年，它自己就会被别的开源手机操作系统取代。</p>

<p>（完）</p>]]>
    </content>
</entry>

</feed> 

